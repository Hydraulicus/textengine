{"version":3,"sources":["Index.module.scss","assets/logos/fullSize/elephant.svg","assets/logos/fullSize/horse.svg","assets/logos/fullSize/react.svg","assets/logos/fullSize/rooster.svg","assets/logos/index.js","UI/panel/mascotsPanel.js","assets/index.js","UI/panel/sidePanel.js","utils/textmeasurer.js","utils/scaleImageData.js","canvas/drawText.js","canvas/drawImage.js","canvas/drawingSequence.js","canvas/index.js","constants/initSettings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","canvases","canvaContainer","serviceCanvas","__webpack_require__","p","logos","elephant","horse","react","rooster","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","cursor","textTransform","width","height","icon","color","borderRadius","marginRight","info","fontSize","tileData","img","mascots","title","author","mascotsPanel","_ref","eventHandler","classes","react_default","a","createElement","className","GridList","cellHeight","GridListTile","key","cols","style","ListSubheader","component","map","tile","src","alt","onClick","e","mascot","target","GridListTileBar","subtitle","actionIcon","IconButton","aria-label","concat","fonts","value","label","container","textField","marginLeft","spacing","fontFamily","dense","marginTop","menu","sidePanel","name","props","texts","handleChangeTextsProp","idx","event","newTexts","Object","objectSpread","text","toUpperCase","TextField","id","select","onChange","defineProperty","SelectProps","native","MenuProps","helperText","margin","option","textItem","defaultValue","classNames","variant","textmeasurer","options","getComputedStyle","element","font","fontWeight","boundingRect","measureBoundingRect","canvas","document","context","getContext","fillText","replace","imageData","getImageData","result","measure","foundTopText","foundBottomText","bottomTextY","topTextY","yOffset","temporaryContainer","position","top","left","temporaryElement","innerText","body","appendChild","bBox","getBoundingClientRect","removeChild","Iterator","maxWidth","maxHeight","this","x","y","index","moveRight","arePixelsToTheRight","moveDown","noMorePixels","parameters","allPixelsInThisRowAreWhite","iterator","isTransparent","data","property","window","scaleImageData","ctx","amplitude","curve","halfWidth","orientation","scaled","createImageData","row","col","sourcePixel","delta","destRow","Math","round","drawText","tCtx","_ref$text","_ref$fontSize","_ref$fontFamily","_ref$width","_ref$offsetTop","offsetTop","_ref$distortion","distortion","_ref$lineWidth","lineWidth","_ref$fillStyle","fillStyle","_ref$designedSize","designedSize","designedHeight","_ctx$canvas","ctxWidth","ctxHeight","YFactor","fillRect","_textMeasurer","textMeasurer","textWidth","textHeight","scaleFActor","coord","x0","y0","stroke","textAlign","strokeText","abs","scaledImageData","putImageData","Image","toDataURL","clearRect","Promise","resolve","onload","drawImage","_ref$id","drawingSequence","_x","_x2","_x3","drawingSequence_ref","apply","arguments","_callee","regenerator_default","wrap","_context","prev","next","save","DrawImage","DrawText","abrupt","restore","stop","usePersistentCanvas","initialProps","_usePersistentState","init","_useState","useState","JSON","parse","localStorage","getItem","_useState2","slicedToArray","setProps","useEffect","setItem","stringify","usePersistentState","_usePersistentState2","canvasRef","useRef","textCanvasREf","saveCanvasToFile","fileName","current","toBlob","blob","saveAs","_drawing","asyncToGenerator","mark","draw","saveLQ","Date","now","saveHQ","canva","textCanvas","setAttribute","innerWidth","innerHeight","drawing","HQSize","LQSize","flexGrow","padding","secondary","App","_usePersistentCanvas","_usePersistentCanvas2","Grid","item","xs","Paper","styles","ref","justify","ButtonGroup","Button","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7951e409.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvases\":\"Index_canvases__1jvry\",\"canvaContainer\":\"Index_canvaContainer__18NXF\",\"serviceCanvas\":\"Index_serviceCanvas__uD8GG\"};","module.exports = __webpack_public_path__ + \"static/media/elephant.43105bae.svg\";","module.exports = __webpack_public_path__ + \"static/media/horse.aa2e0ee6.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/rooster.0da0e356.svg\";","import elephant from './fullSize/elephant.svg';\r\nimport horse from './fullSize/horse.svg';\r\nimport react from './fullSize/react.svg';\r\nimport rooster from './fullSize/rooster.svg';\r\n\r\nexport default  {elephant, horse, react, rooster}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport mascots from './../../assets/logos'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    cursor: 'pointer',\r\n    textTransform: 'capitalize',\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n  icon: {\r\n    color: 'gray',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.54)',\r\n    borderRadius: '50%',\r\n    width: '1.2rem',\r\n    height: '1.2rem',\r\n    marginRight: '1rem'\r\n  },\r\n  info: {\r\n    fontSize: '0.5rem'\r\n  }\r\n}));\r\n\r\nconst tileData = [\r\n       {\r\n           img: mascots.elephant,\r\n           title: 'elephant',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.horse,\r\n           title: 'horse',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.rooster,\r\n           title: 'rooster',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.react,\r\n           title: 'react',\r\n           author: 'Facebook',\r\n         },\r\n];\r\n\r\n\r\nexport default function ({eventHandler}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={180} className={classes.gridList}>\r\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n          <ListSubheader component=\"div\">Please choose mascot</ListSubheader>\r\n        </GridListTile>\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img} >\r\n            <img\r\n              src={tile.img}\r\n              alt={tile.title}\r\n              onClick={ e => { eventHandler({mascot: e.target.alt}) } }\r\n            />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              subtitle={<span>by: {tile.author}</span>}\r\n              actionIcon={\r\n                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\r\n                    <span className={classes.info}>i</span>\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}","import logos from './logos'\r\n\r\nconst fonts = [\r\n  {\r\n    value: 'Arvo',\r\n    label: 'Arvo',\r\n  },\r\n  {\r\n    value: 'AtomicAge',\r\n    label: 'AtomicAge',\r\n  },\r\n  {\r\n    value: 'Bahiana',\r\n    label: 'Bahiana',\r\n  },\r\n  {\r\n    value: 'BerkshireSwash',\r\n    label: 'BerkshireSwash',\r\n  },\r\n  {\r\n    value: 'BlendaScript',\r\n    label: 'BlendaScript',\r\n  },\r\n  {\r\n    value: 'LilitaOne',\r\n    label: 'LilitaOne',\r\n  },\r\n  {\r\n    value: 'GrandHotel',\r\n    label: 'GrandHotel',\r\n  },\r\n  {\r\n    value: 'MedulaOne',\r\n    label: 'MedulaOne',\r\n  },\r\n  {\r\n    value: 'PirataOne',\r\n    label: 'PirataOne',\r\n  },\r\n  {\r\n    value: 'Teko',\r\n    label: 'Teko',\r\n  },\r\n];\r\nexport {fonts, logos}","import React, {Fragment} from 'react';\r\nimport classNames from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {fonts} from './../../assets'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: '15rem',\r\n    fontFamily: 'AtomicAge'\r\n  },\r\n\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function ({eventHandler, props}) {\r\n  const { texts } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  // const [values, setValues] = React.useState({\r\n  //   name: 'Cat in the Hat',\r\n  //   age: '',\r\n  //   multiline: 'Controlled',\r\n  //   currency: 'EUR',\r\n  // });\r\n\r\n  const handleChange = name => event => {\r\n    eventHandler({ [name]: event.target.value });\r\n  };\r\n\r\n  const handleChangeTextsProp = (idx, name) => event => {\r\n    const newTexts = texts;\r\n    newTexts[idx] =  {\r\n      ...texts[idx],\r\n      text: (event.target.value).toUpperCase(),\r\n    };\r\n    eventHandler({\r\n      texts: newTexts\r\n    });\r\n  };\r\n\r\n  return <Fragment>\r\n    <h3 style={{fontFamily: props.fontFamily}} >Please select options</h3>\r\n    <TextField\r\n      id='standard-select-currency-native'\r\n      select\r\n      label='Select font'\r\n      className={classes.textField}\r\n      value={props.fontFamily}\r\n      onChange={handleChange('fontFamily')}\r\n      SelectProps={{\r\n        native: true,\r\n        MenuProps: {\r\n          className: classes.menu,\r\n        },\r\n      }}\r\n      helperText='Please select font'\r\n      margin='normal'\r\n    >\r\n      {fonts.map(option => (\r\n        <option key={option.value} value={option.value}  style={{fontFamily: option.value}}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </TextField>\r\n\r\n\r\n    { texts.map( (textItem, idx) => <Fragment key={textItem.id}>\r\n        <TextField\r\n          id={textItem.id}\r\n          label={textItem.label}\r\n          defaultValue={textItem.text}\r\n          onChange={handleChangeTextsProp(idx, 'text')}\r\n          className={classNames(classes.textField, classes.dense)}\r\n          margin='dense'\r\n          variant='outlined'\r\n        />\r\n    </Fragment>)\r\n    }\r\n\r\n\r\n  </Fragment>\r\n\r\n}\r\n\r\n","  export default function(options) {\n    var fontSize = options.fontSize || getComputedStyle(options.element, 'font-size') || '100px';\n    var fontWeight = options.fontWeight || getComputedStyle(options.element, 'font-weight') || 'normal';\n    var fontFamily = options.fontFamily || getComputedStyle(options.element, 'font-family') || 'Arial';\n    var font = fontWeight + ' ' + fontSize + ' ' + fontFamily;\n    \n    var boundingRect = measureBoundingRect(options.text, font);\n    \n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.width = boundingRect.width;\n    canvas.height = boundingRect.height * 1.2; // Bounding rect height may not be enough as fillText() will render from the baseline \n    context.font = font;\n    context.fillText(options.text, 0, fontSize.replace('px', ''));\n    \n    var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    var result = measure({ width: canvas.width, height: canvas.height, imageData: imageData, options: options });\n    \n    if (!result.foundTopText) {\n      return { width: boundingRect.width, height: 0, yOffset: 0 };\n    }\n    \n    if (!result.foundBottomText) {\n      return { width: boundingRect.width, height: canvas.height - result.topTextY, yOffset: -result.topTextY };\n    }\n    \n    return { width: boundingRect.width, height: result.bottomTextY - result.topTextY, yOffset: -result.topTextY };\n  }\n  \n  const measureBoundingRect = function(text, font) {\n    var temporaryContainer = document.createElement('div');\n    temporaryContainer.style.position = 'fixed';\n    temporaryContainer.style.top = '0px';\n    temporaryContainer.style.left = '0px';\n    temporaryContainer.style.width = '0px';\n    temporaryContainer.style.height = '0px';\n    temporaryContainer.style.overflow = 'hidden';\n    \n    var temporaryElement = document.createElement('span');\n    temporaryElement.style.font = font;\n    temporaryElement.innerText = text;\n    document.body.appendChild(temporaryElement);\n    var bBox = temporaryElement.getBoundingClientRect();\n    document.body.removeChild(temporaryElement);\n    return bBox;\n  }\n  \n  function Iterator(maxWidth, maxHeight) {\n    this.x = 0;\n    this.y = 0;\n    this.index = 0;\n    \n    this.moveRight = function() {\n      if (this.arePixelsToTheRight()) {\n        this.x++;\n        this.index += 4;\n      } else {\n        this.moveDown();\n      }\n    }\n    \n    this.moveDown = function() {\n      this.x = 0;\n      this.y++;\n      this.index = this.y * maxWidth * 4;\n    }\n    \n    this.arePixelsToTheRight = function() {\n      return this.x < maxWidth - 1;\n    }\n    \n    this.noMorePixels = function() {\n      return this.index >= (maxWidth * maxHeight * 4) - 4;\n    }\n  }\n  \n  const measure = function(parameters) {\n    // Find the top and bottom of the text by finding which rows are entirely full of transparent pixels.\n    // The difference between the top-most transparent row and the bottom-most transparent row is the text height.    \n    var iterator = new Iterator(parameters.width, parameters.height);\n    var foundTopText = false;\n    var foundBottomText = false;\n    var topTextY = null;\n    var bottomTextY = null;\n    var allPixelsInThisRowAreWhite;\n    while (!iterator.noMorePixels()) {\n      if (!foundTopText) {\n        // We have only encounted rows that are totally white so far, as soon as we \n        // find a pixel that is not white we will count that as the top of the text\n        if (isTransparent(parameters.imageData, iterator.index)) {\n          iterator.moveRight();\n        } else {\n          topTextY = iterator.y;\n          foundTopText = true;\n          iterator.moveDown();\n        }\n      } else {\n        // We are looping through the rows until we find a row which is all white, \n        // in which case we have reached the bottom of the text\n        if (!iterator.arePixelsToTheRight()) {\n          if (allPixelsInThisRowAreWhite) {\n            bottomTextY = iterator.y;\n            foundBottomText = true;\n            break;\n          }  \n          allPixelsInThisRowAreWhite = true;\n          iterator.moveDown();\n        }\n        if (!isTransparent(parameters.imageData, iterator.index)) {\n          allPixelsInThisRowAreWhite = false;\n          iterator.moveDown();\n        } else {\n          iterator.moveRight();\n        }\n      }\n    }\n    \n    return { foundTopText: foundTopText, foundBottomText: foundBottomText, topTextY: topTextY, bottomTextY: bottomTextY };\n  }\n  \n  function isTransparent(imageData, index) {\n    return imageData.data[index + 3] === 0; // If there is zero alpha then it is transparent\n  }\n  \n  function getComputedStyle(element, property) {\n    return element ? window.getComputedStyle(element)[property] : null ;\n  }\n","function scaleImageData({ctx, imageData,  amplitude, curve}) {\r\n  const halfWidth = imageData.width * 0.5 || ctx.width / 2;\r\n  const orientation = amplitude < 0 ? -1 : 0;\r\n  var scaled = ctx.createImageData(imageData.width, imageData.height + amplitude);\r\n  for(var row = 0; row < imageData.height; row++) {\r\n    for(var col = 0; col < imageData.width; col++) {\r\n      var sourcePixel = [\r\n        imageData.data[(row * imageData.width + col) * 4 + 0],\r\n        imageData.data[(row * imageData.width + col) * 4 + 1],\r\n        imageData.data[(row * imageData.width + col) * 4 + 2],\r\n        imageData.data[(row * imageData.width + col) * 4 + 3]\r\n      ];\r\n      var delta = (col - halfWidth) / halfWidth;\r\n      const dy = Math.round(amplitude * curve(delta) ) + orientation * amplitude;\r\n      var destRow = row + dy;\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 0] = sourcePixel[0];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 1] = sourcePixel[1];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 2] = sourcePixel[2];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 3] = sourcePixel[3];\r\n    }\r\n  }\r\n\r\n  return scaled;\r\n}\r\n\r\nexport default scaleImageData","import textMeasurer from '../utils/textmeasurer'\r\nimport scaleImageData from '../utils/scaleImageData'\r\n\r\nexport default function(\r\n  {\r\n    ctx,\r\n    tCtx,\r\n    text = '1234567890abcdefghihklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n    fontSize = 80,\r\n    fontFamily = 'AtomicAge',\r\n    width = 3400,\r\n    offsetTop = 50,\r\n    distortion = 0,\r\n    lineWidth = 3,\r\n    fillStyle = '#4444f1',\r\n\r\n    designedSize = {\r\n      width: 3600,\r\n      height: 3600\r\n    }\r\n  }\r\n) {\r\n\r\n  const {\r\n    // width: designedWidth,\r\n    height: designedHeight } = designedSize;\r\n  const { width: ctxWidth, height: ctxHeight } = ctx.canvas;\r\n  // const XFactor = ctxWidth / designedWidth;\r\n  const YFactor = ctxHeight / designedHeight;\r\n\r\n  ctx.fillStyle = 'rgba(10,0,0, 0.05)';\r\n  ctx.fillRect(0,0, ctxWidth, ctxHeight);\r\n\r\n  /* detect scale factor to fit short text into box width */\r\n  const {width: textWidth, height: textHeight} = textMeasurer({\r\n    text,\r\n    fontSize: `${YFactor * fontSize}px`,\r\n    fontFamily\r\n  });\r\n  const scaleFActor = ( width/textWidth > 1 ) ? width/textWidth : 1;\r\n  const renderFontSize = YFactor * fontSize * scaleFActor;\r\n  // console.log(width, textHeight, textWidth, scaleFActor, 'renderFontSize =', renderFontSize);\r\n\r\n  /* calculate height of text  */\r\n  const {height} = textMeasurer({\r\n    text,\r\n    fontSize: `${renderFontSize}px`,\r\n    // fontWeight: 'bold',\r\n    fontFamily\r\n  });\r\n  // console.log('textHeight =', textHeight, 'height =', height);\r\n  /* rect around the text */\r\n  const coord = {\r\n    x0: ctxWidth / 2 - width / 2,\r\n    y0: 0,\r\n    x: ctxWidth / 2,\r\n    y: height,\r\n  };\r\n\r\n  // tCtx.textBaseline = 'bottom';\r\n  tCtx.fillStyle = fillStyle;\r\n  tCtx.lineWidth = lineWidth;\r\n  // tCtx.rect(coord.x0, 0, width, height);\r\n  tCtx.stroke();\r\n  tCtx.textAlign = 'center';\r\n  tCtx.font=`${YFactor * fontSize * scaleFActor}px ${fontFamily}`;\r\n\r\n  // console.log(text, ' coord.x =',  coord.x, 'height =', height, ' font =', YFactor * fontSize * scaleFActor);\r\n\r\n  tCtx.fillText(text, coord.x, height / 1.025, width);\r\n  tCtx.strokeText(text, coord.x, height / 1.025, width);\r\n\r\n  if (distortion !== 0 ) {\r\n    const imageData = tCtx.getImageData(coord.x0-1, coord.y0-1, width+2, height + 2 * Math.abs(YFactor * distortion) );\r\n    const scaledImageData = scaleImageData({ctx: tCtx, imageData, amplitude: YFactor * distortion, curve: x => x * x});\r\n    tCtx.putImageData(scaledImageData, coord.x0-1, coord.y0-1);\r\n  }\r\n\r\n  const img = new Image();\r\n  img.src = tCtx.canvas.toDataURL();\r\n  tCtx.clearRect(0, 0, tCtx.canvas.width, tCtx.canvas.height);\r\n\r\n  return new Promise(resolve => {\r\n    img.onload = function (){\r\n      ctx.drawImage(img, 0, 0 - YFactor * offsetTop, ctxWidth, height + 2* Math.abs(YFactor * distortion) + YFactor * offsetTop, 0, coord.y0, ctxWidth, textHeight + 2 * Math.abs(YFactor * distortion) + YFactor * offsetTop);\r\n      resolve('drown')\r\n    };\r\n  });\r\n\r\n}\r\n\r\n","import mascots from './../assets/logos'\r\n\r\nexport default function (\r\n  {\r\n    ctx,\r\n    id = 'elephant'\r\n  }\r\n) {\r\n  const img = new Image(ctx.canvas.width, ctx.canvas.height);\r\n  img.src = mascots[id];\r\n\r\n  return new Promise(resolve => {\r\n    img.onload = function (){\r\n      ctx.drawImage(img, 0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      resolve('drown')\r\n    };\r\n  });\r\n}","import DrawText from './drawText'\r\nimport DrawImage from './drawImage'\r\n\r\nexport default async function (ctx, tCtx, props) {\r\n  const { fontFamily } = props;\r\n\r\n  ctx.fillStyle = '#fff';\r\n  ctx.save();\r\n\r\n  await DrawImage({\r\n    ctx,\r\n    id: props.mascot\r\n  });\r\n\r\n  await DrawText(\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      fontFamily,\r\n      ...props.texts[0],\r\n    }\r\n  );\r\n  await DrawText(\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      fontFamily,\r\n      ...props.texts[1],\r\n    }\r\n  );\r\n\r\n  return new Promise(resolve => {\r\n    ctx.restore();\r\n    resolve('all are drown')\r\n  });\r\n}\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport { saveAs } from 'file-saver';\r\nimport draw from './drawingSequence'\r\n\r\nexport function usePersistentState(init) {\r\n  const [props, setProps] = useState({\r\n      ...JSON.parse(localStorage.getItem('draw-app')),  ...init\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('draw-app', JSON.stringify(props))\r\n  });\r\n  return [props, setProps]\r\n}\r\n\r\nexport function usePersistentCanvas(initialProps) {\r\n  const [props, setProps] = usePersistentState(initialProps);\r\n  const canvasRef = useRef(null);\r\n  const textCanvasREf = useRef(null);\r\n\r\n  const saveCanvasToFile = (fileName) => {\r\n    const canvas = canvasRef.current;\r\n    canvas.toBlob(function(blob) {\r\n      saveAs(blob, fileName);\r\n    });\r\n  };\r\n\r\n  async function drawing (ctx, tCtx, props) {\r\n    // console.log('drawing props =', props);\r\n    await draw(ctx, tCtx, props);\r\n    if (props.saveLQ) {\r\n      saveCanvasToFile(`export_LQ_${Date.now()}.png`);\r\n      setProps({\r\n        ...props,\r\n        saveLQ: false,\r\n      });\r\n    }\r\n    if (props.saveHQ) {\r\n      saveCanvasToFile(`export_HQ_${Date.now()}.png`);\r\n      setProps({\r\n        ...props,\r\n        saveHQ: false,\r\n        canva: {\r\n          width: 720,\r\n          height: 720\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect( () => {\r\n    const { canva } = props;\r\n    const canvas = canvasRef.current;\r\n    const textCanvas = textCanvasREf.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const tCtx = textCanvas.getContext('2d');\r\n    canvas.setAttribute('width', canva.width);\r\n    canvas.setAttribute('height', canva.height);\r\n    textCanvas.setAttribute('width', canva.width);\r\n    textCanvas.setAttribute('height', canva.height);\r\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n    drawing(ctx, tCtx, props)\r\n  });\r\n\r\n  return [props, setProps, canvasRef, textCanvasREf]\r\n}\r\n","const HQSize = {\r\n    width: 3600,\r\n    height: 3600\r\n};\r\n\r\nconst LQSize = {\r\n    width: 720,\r\n    height: 720\r\n};\r\n\r\n\r\nconst initialProps = {\r\n  fontFamily: 'AtomicAge',\r\n  texts: [\r\n    {\r\n      id: 'topText',\r\n      label: 'top text',\r\n      text: 'TOP STRING',\r\n      fontSize: 1200,\r\n      width: 0.85 *  LQSize.width,\r\n      offsetTop: 100,\r\n      lineWidth: 6,\r\n      fillStyle: '#226',\r\n      distortion: 500,\r\n    },\r\n    {\r\n      id: 'bottomText',\r\n      label: 'bottom text',\r\n      text: 'BOTTOM STRING',\r\n      fontSize: 1000,\r\n      width: 0.85 *  LQSize.width,\r\n      offsetTop: 2300,\r\n      lineWidth: 6,\r\n      fillStyle: '#226',\r\n      distortion: -500,\r\n    },\r\n  ],\r\n  saveHQ: false,\r\n  saveLQ: false,\r\n  canva: {\r\n    ...LQSize,\r\n  }\r\n};\r\n\r\nexport {HQSize, LQSize, initialProps};","import React, {Fragment} from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Paper from '@material-ui/core/Paper';\nimport { SidePanel, MascotsPanel } from './UI/'\nimport { usePersistentCanvas } from './canvas'\nimport {HQSize, initialProps} from './constants/initSettings';\nimport styles from './Index.module.scss'\nimport './App.css'\n// import './fonts.scss'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    margin: 'auto',\n\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  const [props, setProps, canvasRef, textCanvasREf] = usePersistentCanvas({...initialProps});\n\n  function eventHandler(e) {\n    // console.log('eventHandler', e);\n    setProps({...props, ...e })\n  }\n\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <Grid container spacing={3} className={classes.root}>\n\n        <Grid item xs={12}>\n          <MascotsPanel eventHandler={eventHandler}/>\n        </Grid>\n\n        <Grid item xs={5}>\n          <Paper className={classes.paper}>\n            <SidePanel eventHandler={eventHandler} props={props}/>\n          </Paper>\n        </Grid>\n        <Grid item xs={7}>\n          <div className={styles.canvaContainer}>\n            <canvas\n              id='THEMAINCANVAS'\n              className={styles.canvases}\n              ref={canvasRef}\n            />\n          </div>\n        </Grid>\n\n\n          <Grid container justify = \"center\">\n          <ButtonGroup variant=\"contained\" aria-label=\"small contained button group\">\n            <Button\n              onClick = { () => { setProps({...props, saveLQ: true }) }}\n            >Save as low-quality PNG (72 DPI)</Button>\n            <Button\n              onClick = { () => {setProps({...props, saveHQ: true, ...HQSize }) }}\n            >Save as high-quality PNG (300 DPI)</Button>\n          </ButtonGroup>\n        </Grid>\n\n      </Grid>\n\n        <canvas\n          className={classNames(styles.serviceCanvas, styles.canvases)}\n          ref={textCanvasREf}\n        />\n    </Fragment>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}