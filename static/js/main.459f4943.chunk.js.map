{"version":3,"sources":["assets/logos/fullSize/elephant.svg","assets/logos/fullSize/horse.svg","assets/logos/fullSize/react.svg","assets/logos/fullSize/rooster.svg","assets/logos/index.js","UI/panel/mascotsPanel.js","assets/index.js","UI/panel/sidePanel.js","constants/initSettings.js","utils/textmeasurer.js","utils/scaleImageData.js","canvas/drawTextV2.js","canvas/drawImage.js","canvas/outlined.js","utils/loadFile.js","canvas/drawImageOutline.js","canvas/drawingSequence.js","canvas/index.js","UI/mainLayout/mainLayout.js","UI/header/header.js","App.js","serviceWorker.js","index.js","UI/mainLayout/Index.module.scss"],"names":["module","exports","__webpack_require__","p","logos","elephant","horse","react","rooster","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","cursor","textTransform","width","gridListTile","info","fontSize","mascotImg","height","border","borderRadius","tileData","img","mascots","title","author","mascotsPanel","_ref","eventHandler","classes","react_default","a","createElement","className","Typography","variant","color","GridList","cellHeight","spacing","cols","map","tile","GridListTile","key","src","alt","onClick","e","mascot","target","fonts","value","label","padding","margin","container","textField","marginLeft","marginRight","colorPicker","backgroundColor","dense","marginTop","menu","sidePanel","name","props","texts","outline","handleChangeTextsProp","idx","event","length","toUpperCase","newTexts","Object","objectSpread","defineProperty","handleChangeTextsColorsProp","checkBox","textItem","Checkbox","checked","visible","inputProps","aria-label","style","fontFamily","Paper","id","TextField","concat","text","defaultValue","onChange","classNames","InputProps","startAdornment","InputAdornment","position","select","SelectProps","native","MenuProps","helperText","option","Grid","justify","item","xs","lib_default","strokeStyle","fillStyle","show","newOutline","handleChangeOutlineProp","HQSize","initialProps","lineWidth","offsetTop","distortion","saveHQ","saveLQ","canva","measureBoundingRect","font","temporaryContainer","document","top","left","temporaryElement","innerText","body","appendChild","bBox","getBoundingClientRect","removeChild","Iterator","maxWidth","maxHeight","this","x","y","index","moveRight","arePixelsToTheRight","moveDown","noMorePixels","measure","parameters","allPixelsInThisRowAreWhite","iterator","foundTopText","foundBottomText","topTextY","bottomTextY","isTransparent","imageData","data","getComputedStyle","element","property","window","scaleImageData","ctx","amplitude","curve","halfWidth","orientation","scaled","createImageData","Math","abs","row","col","sourcePixel","delta","destRow","round","drawTextV2","tCtx","_ref$text","_ref$fontSize","_ref$fontFamily","_ref$width","_ref$offsetTop","_ref$distortion","_ref$lineWidth","_ref$fillStyle","_ref$strokeStyle","_ref$designedSize","designedSize","designedWidth","designedHeight","_ctx$canvas","canvas","ctxWidth","ctxHeight","XFactor","YFactor","OFactor","sqrt","leftPadding","_textMeasurer","options","fontWeight","boundingRect","context","getContext","fillText","replace","getImageData","result","yOffset","textMeasurer","textWidth","textHeight","scaleFActor","scaledLineW","relativeSize","w","h","coord","textAlign","strokeText","scaledImageData","putImageData","Image","toDataURL","clearRect","Promise","resolve","onload","drawImage","_ref$id","outlined","wrappedComp","_props$outline","_props$outline$color","_props$outline$lineWi","newOffsetTop","newLineWidth","getJSONSVGImage","fileName","url","method","defaults","headers","Headers","Content-Type","assign","fetch","process","then","response","json","ok","console","log","reject","drawImageOutline","_x","_ref2","apply","arguments","_callee","_ref$outline","_ref$outline$color","_ref$outline$lineWidt","JSONSVGImage","outlineTag","outLineViewBox","outLineD","outlineXML","svg64","regenerator_default","wrap","_context","prev","next","sent","_","findKey","svg","-id","btoa","abrupt","stop","drawingSequence","_x2","_x3","drawingSequence_ref","outlineShow","t0","Outlined","DrawText","t1","t2","DrawImageOutline","DrawImage","restore","usePersistentCanvas","_usePersistentState","init","_useState","useState","_useState2","slicedToArray","setProps","useEffect","usePersistentState","_usePersistentState2","canvasRef","useRef","textCanvasREf","saveCanvasToFile","current","toBlob","blob","saveAs","_drawing","asyncToGenerator","mark","draw","Date","now","textCanvas","canvasResolution","setAttribute","innerWidth","innerHeight","drawing","flexGrow","paper","palette","secondary","MainLayout","theRestInitProps","objectWithoutProperties","_usePersistentCanvas","_usePersistentCanvas2","Header","styles","canvaContainer","canvases","ref","ButtonGroup","Button","serviceCanvas","MenuIcon","SvgIcon","d","fill","AccountCircle","menuButton","AppBar","background","boxShadow","Toolbar","IconButton","edge","header_MenuIcon","aria-controls","aria-haspopup","header_AccountCircle","App","isMounted","setIsMounted","content","mainLayout","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uVCKxBC,EAAA,CAACC,aAAUC,UAAOC,UAAOC,aCEnCC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,eAAgB,eAChBC,SAAU,UAGZC,SAAU,CACRC,OAAQ,UACRC,cAAe,aACfC,MAAO,KAITC,aAAc,GAEdC,KAAM,CACJC,SAAU,UAEZC,UAAW,CACTC,OAAQ,QACRL,MAAO,QACPM,OAAQ,iBACRC,aAAc,UAIZC,EAAW,CACV,CACIC,IAAKC,EAAQzB,SACb0B,MAAO,WACPC,OAAQ,UAEZ,CACIH,IAAKC,EAAQxB,MACbyB,MAAO,QACPC,OAAQ,UAEZ,CACIH,IAAKC,EAAQtB,QACbuB,MAAO,UACPC,OAAQ,UAEZ,CACIH,IAAKC,EAAQvB,MACbwB,MAAO,QACPC,OAAQ,aAKJC,EAAA,SAAAC,GAA0B,IAAfC,EAAeD,EAAfC,aAClBC,EAAU3B,IAGhB,OACE4B,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQxB,MAEtByB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWJ,EAAQL,MAAOY,MAAM,WAAzD,wBAIAN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUC,WAAY,IAAKC,QAAS,EAAGC,KAAM,EAAGP,UAAWJ,EAAQnB,UAChEW,EAASoB,IAAI,SAAAC,GAAI,OAChBZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAcC,IAAKF,EAAKpB,IAAKW,UAAWJ,EAAQf,cAC9CgB,EAAAC,EAAAC,cAAA,OACEC,UAAWJ,EAAQZ,UACnB4B,IAAKH,EAAKpB,IACVwB,IAAKJ,EAAKlB,MACVuB,QAAU,SAAAC,GAAOpB,EAAa,CAACqB,OAAQD,EAAEE,OAAOJ,8GC1ExDK,EAAQ,CACZ,CACEC,MAAO,OACPC,MAAO,QAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,iBACPC,MAAO,kBAET,CACED,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,OACPC,MAAO,SC7BLnD,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJiD,QAASlD,EAAMmC,QAAQ,EAAG,GAC1BgB,OAAQnD,EAAMmC,QAAQ,EAAG,IAE3BiB,UAAW,CACTlD,QAAS,OACTC,SAAU,UAEZkD,UAAW,CACTC,WAAYtD,EAAMmC,QAAQ,GAC1BoB,YAAavD,EAAMmC,QAAQ,IAI7BqB,YAAa,CACXC,gBAAiB,OAEnBC,MAAO,CACLC,UAAW,IAEbC,KAAM,CACJnD,MAAO,KAET0C,OAAQ,CACNA,OAAQnD,EAAMmC,QAAQ,OAIX0B,EAAA,SAAAtC,GAAiC,IA4CjBuC,EA5CLtC,EAAsBD,EAAtBC,aAAcuC,EAAQxC,EAARwC,MAEpCC,EAEED,EAFFC,MACAC,EACEF,EADFE,QAEIxC,EAAU3B,IAEVoE,EAAwB,SAACC,EAAKL,GAAN,OAAe,SAAAM,GAAS,IAC9CpB,EAAUoB,EAAMtB,OAAhBE,MAEN,KAAc,SAATc,GAAoBd,EAAMqB,OAzCb,IAyClB,CACc,SAATP,IAAkBd,EAAQA,EAAMsB,eAErC,IAAMC,EAAWP,EACjBO,EAASJ,GAATK,OAAAC,EAAA,EAAAD,CAAA,GACKR,EAAMG,GADXK,OAAAE,EAAA,EAAAF,CAAA,GAEGV,EAAOd,IAEVxB,EAAa,CACXwC,MAAOO,OAILI,EAA8B,SAACR,EAAKL,GAAN,OAAe,SAAA9B,GACjD,IAAMuC,EAAWP,EACjBO,EAASJ,GAATK,OAAAC,EAAA,EAAAD,CAAA,GACKR,EAAMG,GADXK,OAAAE,EAAA,EAAAF,CAAA,GAEGV,EAAO9B,IAEVR,EAAa,CACXwC,MAAOO,MA2BLK,EAAW,SAACC,GAChB,OAAOnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CACP9C,MAAM,UACN+C,QAASF,EAASG,QAClBC,WAAY,CACVC,aAAc,kCAIlB,OAAOxD,EAAAC,EAAAC,cAAChC,EAAA,SAAD,KACL8B,EAAAC,EAAAC,cAAA,MAAIuD,MAAO,CAACC,WAAYrB,EAAMqB,aAA9B,yBACEpB,EAAM3B,IAAK,SAACwC,EAAUV,GAAX,OAAmBzC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAOxD,UAAWJ,EAAQxB,KAAMuC,IAAKqC,EAASS,IAC1E5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACED,GAAIT,EAASS,GACbrC,MAAK,GAAAuC,OAAKX,EAAS5B,MAAd,KAAAuC,OAAuBX,EAASY,KAAKpB,OAArC,OAAAmB,OAtGO,IAuGZE,aAAcb,EAASY,KACvBE,SAAUzB,EAAsBC,EAAK,QACrCtC,UAAW+D,IAAWnE,EAAQ4B,UAAW5B,EAAQiC,OACjD3B,QAAQ,WACR8D,WAAY,CACVC,eAAgBpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAgBC,SAAS,SAASpB,EAASC,OAG/DnD,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACED,GAAG,kCACHW,QAAM,EACNlE,QAAQ,WAERkB,MAAM,cACNpB,UAAW+D,IAAWnE,EAAQ0B,OAAQ1B,EAAQ4B,WAC9CL,MAAO6B,EAASO,WAChBO,SAAUzB,EAAsBC,EAAK,cACrC+B,YAAa,CACXC,QAAQ,EACRC,UAAW,CACTvE,UAAWJ,EAAQmC,OAGvByC,WAAW,qBACXlD,OAAO,UAENJ,EAAMV,IAAI,SAAAiE,GAAM,OACf5E,EAAAC,EAAAC,cAAA,UAAQY,IAAK8D,EAAOtD,MAAOA,MAAOsD,EAAOtD,MAAOmC,MAAO,CAACC,WAAYkB,EAAOtD,QACxEsD,EAAOrD,UAKdvB,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMnD,WAAS,EAACoD,QAAQ,SAASrE,QAAS,GACxCT,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbhF,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,CACEmC,KAAK,QACLb,MAAK,cACLD,MAAO6B,EAAS+B,YAChBjB,SAAUhB,EAA4BR,EAAK,kBAG/CzC,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbhF,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,CACEmC,KAAK,QACLb,MAAK,UACLD,MAAO6B,EAASgC,UAChBlB,SAAUhB,EAA4BR,EAAK,oBAQrDzC,EAAAC,EAAAC,cAAA,yCAEAF,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMnD,WAAS,EAACoD,QAAQ,SAASrE,QAAS,GACxCT,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbhF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CACE9C,MAAM,UACN+C,QAASd,EAAQ6C,KACjBnB,UA1FqB7B,EA0FU,OA1FF,SAAAM,GAAS,IACtCW,EAAYX,EAAMtB,OAAlBiC,QAEAgC,EAAUvC,OAAAC,EAAA,EAAAD,CAAA,GACXP,EADWO,OAAAE,EAAA,EAAAF,CAAA,GAEbV,EAAOiB,IAGVvD,EAAa,CACXyC,QAAS8C,MAkFL/D,MAAOiB,EAAQ6C,KACf7B,WAAY,CAAEC,aAAc,WAGhCxD,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbhF,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,CACEmC,KAAK,eACLb,MAAK,QACLD,MAAOiB,EAAQjC,MACf2D,SA9GwB,SAAA7B,GAAI,OAAI,SAAA9B,GACtC,IAAM+E,EAAUvC,OAAAC,EAAA,EAAAD,CAAA,GACXP,EADWO,OAAAE,EAAA,EAAAF,CAAA,GAEbV,EAAO9B,IAEVR,EAAa,CACXyC,QAAS8C,KAwGKC,CAAwB,4EC1LtCC,EAAS,CACbxG,MAAO,KACPK,OAAQ,MASJoG,EAAe,CACnBjD,QAAS,CAAC6C,MAAM,EAAM9E,MAAO,OAAQmF,UAAW,IAChDnD,MAAO,CACL,CACEsB,GAAI,UACJrC,MAAO,WACPmC,WAAY,OACZxE,SAAU,IACV6E,KAAM,aACNhF,MAAO,KACP2G,UAAW,GACXD,UAAW,GACXN,UAAW,OACXD,YAAc,OACdS,WAAY,IACZrC,SAAS,GAEX,CACEM,GAAI,aACJrC,MAAO,cACPmC,WAAY,OACZxE,SAAU,IACV6E,KAAM,gBACNhF,MAAO,KACP2G,UAAW,KACXD,UAAW,GACXN,UAAW,UACXD,YAAa,OACbS,YAAa,IACbrC,SAAS,IAGbsC,QAAQ,EACRC,QAAQ,EACRC,MAAMhD,OAAAC,EAAA,EAAAD,CAAA,GAxCO,CACb/D,MAAO,IACPK,OAAQ,OCsBF2G,EAAsB,SAAShC,EAAMiC,GACzC,IAAIC,EAAqBC,SAAShG,cAAc,OAChD+F,EAAmBxC,MAAMa,SAAW,QACpC2B,EAAmBxC,MAAM0C,IAAM,MAC/BF,EAAmBxC,MAAM2C,KAAO,MAChCH,EAAmBxC,MAAM1E,MAAQ,MACjCkH,EAAmBxC,MAAMrE,OAAS,MAClC6G,EAAmBxC,MAAM9E,SAAW,SAEpC,IAAI0H,EAAmBH,SAAShG,cAAc,QAC9CmG,EAAiB5C,MAAMuC,KAAOA,EAC9BK,EAAiBC,UAAYvC,EAC7BmC,SAASK,KAAKC,YAAYH,GAC1B,IAAII,EAAOJ,EAAiBK,wBAE5B,OADAR,SAASK,KAAKI,YAAYN,GACnBI,GAGT,SAASG,EAASC,EAAUC,GAC1BC,KAAKC,EAAI,EACTD,KAAKE,EAAI,EACTF,KAAKG,MAAQ,EAEbH,KAAKI,UAAY,WACXJ,KAAKK,uBACPL,KAAKC,IACLD,KAAKG,OAAS,GAEdH,KAAKM,YAITN,KAAKM,SAAW,WACdN,KAAKC,EAAI,EACTD,KAAKE,IACLF,KAAKG,MAAQH,KAAKE,EAAIJ,EAAW,GAGnCE,KAAKK,oBAAsB,WACzB,OAAOL,KAAKC,EAAIH,EAAW,GAG7BE,KAAKO,aAAe,WAClB,OAAOP,KAAKG,OAAUL,EAAWC,EAAY,EAAK,GAItD,IAAMS,EAAU,SAASC,GASvB,IANA,IAKIC,EALAC,EAAW,IAAId,EAASY,EAAWzI,MAAOyI,EAAWpI,QACrDuI,GAAe,EACfC,GAAkB,EAClBC,EAAW,KACXC,EAAc,MAEVJ,EAASJ,gBACf,GAAKK,EAUE,CAGL,IAAKD,EAASN,sBAAuB,CACnC,GAAIK,EAA4B,CAC9BK,EAAcJ,EAAST,EACvBW,GAAkB,EAClB,MAEFH,GAA6B,EAC7BC,EAASL,WAENU,EAAcP,EAAWQ,UAAWN,EAASR,OAIhDQ,EAASP,aAHTM,GAA6B,EAC7BC,EAASL,iBArBPU,EAAcP,EAAWQ,UAAWN,EAASR,OAC/CQ,EAASP,aAETU,EAAWH,EAAST,EACpBU,GAAe,EACfD,EAASL,YAuBf,MAAO,CAAEM,aAAcA,EAAcC,gBAAiBA,EAAiBC,SAAUA,EAAUC,YAAaA,IAG1G,SAASC,EAAcC,EAAWd,GAChC,OAAqC,IAA9Bc,EAAUC,KAAKf,EAAQ,GAGhC,SAASgB,EAAiBC,EAASC,GACjC,OAAOD,EAAUE,OAAOH,iBAAiBC,GAASC,GAAY,KCpGnDE,MAzBf,SAAAzI,GAIE,IAJ2D,IAApC0I,EAAoC1I,EAApC0I,IAAKP,EAA+BnI,EAA/BmI,UAAYQ,EAAmB3I,EAAnB2I,UAAWC,EAAQ5I,EAAR4I,MAC7CC,EAA8B,GAAlBV,EAAUjJ,OAAewJ,EAAIxJ,MAAQ,EACjD4J,EAAcH,EAAY,GAAK,EAAI,EACrCI,EAASL,EAAIM,gBAAgBb,EAAUjJ,MAAOiJ,EAAU5I,OAAS0J,KAAKC,IAAIP,IACtEQ,EAAM,EAAGA,EAAMhB,EAAU5I,OAAQ4J,IACvC,IAAI,IAAIC,EAAM,EAAGA,EAAMjB,EAAUjJ,MAAOkK,IAAO,CAC7C,IAAIC,EAAc,CAChBlB,EAAUC,KAAqC,GAA/Be,EAAMhB,EAAUjJ,MAAQkK,GAAW,GACnDjB,EAAUC,KAAqC,GAA/Be,EAAMhB,EAAUjJ,MAAQkK,GAAW,GACnDjB,EAAUC,KAAqC,GAA/Be,EAAMhB,EAAUjJ,MAAQkK,GAAW,GACnDjB,EAAUC,KAAqC,GAA/Be,EAAMhB,EAAUjJ,MAAQkK,GAAW,IAEjDE,GAASF,EAAMP,GAAaA,EAE5BU,EAAUJ,GADHF,KAAKO,MAAMb,EAAYC,EAAMU,IAAWR,EAAcH,GAEjEI,EAAOX,KAAsC,GAAhCmB,EAAUR,EAAO7J,MAAQkK,GAAW,GAAKC,EAAY,GAClEN,EAAOX,KAAsC,GAAhCmB,EAAUR,EAAO7J,MAAQkK,GAAW,GAAKC,EAAY,GAClEN,EAAOX,KAAsC,GAAhCmB,EAAUR,EAAO7J,MAAQkK,GAAW,GAAKC,EAAY,GAClEN,EAAOX,KAAsC,GAAhCmB,EAAUR,EAAO7J,MAAQkK,GAAW,GAAKC,EAAY,GAItE,OAAON,GCnBMU,EAAA,SAAAzJ,GAmBb,IAjBE0I,EAiBF1I,EAjBE0I,IACAgB,EAgBF1J,EAhBE0J,KAgBFC,EAAA3J,EAfEkE,YAeF,IAAAyF,EAfS,iEAeTA,EAAAC,EAAA5J,EAdEX,gBAcF,IAAAuK,EAda,GAcbA,EAAAC,EAAA7J,EAbE6D,kBAaF,IAAAgG,EAbe,YAafA,EAAAC,EAAA9J,EAZEd,aAYF,IAAA4K,EAZU,KAYVA,EAAAC,EAAA/J,EAXE6F,iBAWF,IAAAkE,EAXc,GAWdA,EAAAC,EAAAhK,EAVE8F,kBAUF,IAAAkE,EAVe,EAUfA,EAAAC,EAAAjK,EATE4F,iBASF,IAAAqE,EATc,EASdA,EAAAC,EAAAlK,EAREsF,iBAQF,IAAA4E,EARc,UAQdA,EAAAC,EAAAnK,EAPEqF,mBAOF,IAAA8E,EAPgB,UAOhBA,EAAAC,EAAApK,EALEqK,oBAKF,IAAAD,EALiB,CACblL,MAAO,KACPK,OAAQ,MAGZ6K,EAGSE,EACoBD,EAD3BnL,MACQqL,EAAmBF,EAA3B9K,OAJFiL,EAK+C9B,EAAI+B,OAApCC,EALfF,EAKQtL,MAAyByL,EALjCH,EAKyBjL,OAEnBqL,EAAUF,EAAWJ,EACrBO,EAAUF,EAAYJ,EACtBO,EAAU7B,KAAK8B,KAAKH,EAAUA,EAAUC,EAAUA,GAGlDG,GAAeV,EAAgBpL,GAAS0L,EAAU,EAZxDK,EFtBe,SAASC,GACtB,IAAI7L,EAAW6L,EAAQ7L,UAAYgJ,EAAiB6C,EAAQ5C,QAAS,cAAgB,QAGjFnC,GAFa+E,EAAQC,YAAc9C,EAAiB6C,EAAQ5C,QAAS,gBAAkB,UAEnE,IAAMjJ,EAAW,KADxB6L,EAAQrH,YAAcwE,EAAiB6C,EAAQ5C,QAAS,gBAAkB,SAGvF8C,EAAelF,EAAoBgF,EAAQhH,KAAMiC,GAEjDsE,EAASpE,SAAShG,cAAc,UAChCgL,EAAUZ,EAAOa,WAAW,MAChCb,EAAOvL,MAAQkM,EAAalM,MAC5BuL,EAAOlL,OAA+B,IAAtB6L,EAAa7L,OAC7B8L,EAAQlF,KAAOA,EACfkF,EAAQE,SAASL,EAAQhH,KAAM,EAAG7E,EAASmM,QAAQ,KAAM,KAEzD,IAAIrD,EAAYkD,EAAQI,aAAa,EAAG,EAAGhB,EAAOvL,MAAOuL,EAAOlL,QAC5DmM,EAAShE,EAAQ,CAAExI,MAAOuL,EAAOvL,MAAOK,OAAQkL,EAAOlL,OAAQ4I,UAAWA,EAAW+C,QAASA,IAElG,OAAKQ,EAAO5D,aAIP4D,EAAO3D,gBAIL,CAAE7I,MAAOkM,EAAalM,MAAOK,OAAQmM,EAAOzD,YAAcyD,EAAO1D,SAAU2D,SAAUD,EAAO1D,UAH1F,CAAE9I,MAAOkM,EAAalM,MAAOK,OAAQkL,EAAOlL,OAASmM,EAAO1D,SAAU2D,SAAUD,EAAO1D,UAJvF,CAAE9I,MAAOkM,EAAalM,MAAOK,OAAQ,EAAGoM,QAAS,GEwBxDC,CAAa,CACf1H,OACA7E,SAAQ,GAAA4E,OAAK4G,EAAUxL,EAAf,MACRwE,eALOgI,EAnBTZ,EAmBE/L,MAA0B4M,EAnB5Bb,EAmBoB1L,OAOdwM,EAAgBnB,EAAU1L,EAAQ2M,EAAY,EAAMjB,EAAU1L,EAAQ2M,EAAY,EAClFG,EAAcnB,EAAUkB,EAAcnG,EAAY,EAGlDqG,EAAe,CACnBC,EAAGtB,EAAUmB,EAAc7M,EAC3BiN,EAAGL,GAGCM,EACA,EAON1C,EAAKrE,YAAcA,EACnBqE,EAAKpE,UAAYA,EAMjBoE,EAAK9D,UAAYkF,EAAUiB,EAAcnG,EACzC8D,EAAK2C,UAAY,OACjB3C,EAAKvD,KAAL,GAAAlC,OAAc4G,EAAUxL,EAAxB,OAAA4E,OAAuCJ,GAEvC6F,EAAK6B,SAASrH,EAAMkI,EAAWN,EAAaE,EAAepB,EAAU1L,GACrEwK,EAAK4C,WAAWpI,EAAMkI,EAAWN,EAAaE,EAAepB,EAAU1L,GAEvE,IAAMyJ,EAAY7C,EAAa+E,EAC/B,GAAmB,IAAf/E,EAAmB,CACrB,IAAMqC,EAAYuB,EAAK+B,aACrB,EAAG,EACHQ,EAAaC,EAAGD,EAAaE,EAAIlD,KAAKC,IAAIP,IAEtC4D,EAAkB9D,EAAe,CAACC,IAAKgB,EAAMvB,YAAWQ,YAAWC,MAAO,SAAAzB,GAAC,OAAIA,EAAIA,KACzFuC,EAAK8C,aAAaD,EAAiBH,EAAU,GAG/C,IAAMzM,EAAM,IAAI8M,MAIhB,OAHA9M,EAAIuB,IAAMwI,EAAKe,OAAOiC,YACtBhD,EAAKiD,UAAU,EAAG,EAAGjD,EAAKe,OAAOvL,MAAOwK,EAAKe,OAAOlL,QAE7C,IAAIqN,QAAQ,SAAAC,GACjBlN,EAAImN,OAAS,WACXpE,EAAIqE,UAAUpN,EACZ,EAAG,EACHsM,EAAaC,EAAGD,EAAaE,EAAI,EAAIlD,KAAKC,IAAIP,GAC9CqC,EAAanF,EAAYgF,EACzB3L,EAAQ0L,EAASkB,EAAa,EAAI7C,KAAKC,IAAIP,IAE7CkE,EAAQ,aCnGCE,GAAA,SAAA/M,GAKb,IAHE0I,EAGF1I,EAHE0I,IAGFsE,EAAAhN,EAFE+D,UAEF,IAAAiJ,EAFO,WAEPA,EACMrN,EAAM,IAAI8M,MAAM/D,EAAI+B,OAAOvL,MAAOwJ,EAAI+B,OAAOlL,QAGnD,OAFAI,EAAIuB,IAAMtB,EAAQmE,GAEX,IAAI6I,QAAQ,SAAAC,GACjBlN,EAAImN,OAAS,WACXpE,EAAIqE,UAAUpN,EAAK,EAAG,EAAG+I,EAAI+B,OAAOvL,MAAOwJ,EAAI+B,OAAOlL,QACtDsN,EAAQ,aCdCI,GAAA,SAAUC,EAAa1K,GAAO,IAAA2K,EAQvC3K,EANFE,QAFyC0K,EAAAD,EAGvC1M,aAHuC,IAAA2M,EAG/B,OAH+BA,EAAAC,EAAAF,EAIvCvH,iBAJuC,IAAAyH,EAI3B,GAJ2BA,EASrCC,EADF9K,EAFFqD,UAG+BD,EAAY,EACvC2H,EAAe3H,EAFjBpD,EADFoD,UAYF,OAAOsH,EAROjK,OAAAC,EAAA,EAAAD,CAAA,GACTT,EADS,CAEZ8C,UAAW7E,EACX4E,YAAa5E,EACbmF,UAAW2H,EACX1H,UAAWyH,2BCSR,SAASE,GAAgBC,GAC9B,IAAIvC,EAAU,CACZwC,IAAKD,EACLE,OAAQ,OAOJC,EAAW,CAACC,QAJF,IAAIC,QAAQ,CAC1BC,eAAgB,sBAMlB,OADA7C,EAAUjI,OAAO+K,OAAO,GAAIJ,EAAU1C,GAC/B+C,MAAMC,cAAwBhD,EAAQwC,IAAKxC,GAC/CiD,KAAK,SAAAC,GAAQ,OACZA,EAASC,OAAOF,KAAK,SAAAE,GAEnB,OAAID,EAASE,GAIND,GAHLE,QAAQC,IAAI,UACL5B,QAAQ6B,OAAOJ,QCxCjB,IAAAK,GAAA,SAAAC,GAAA,OAAAC,GAAAC,MAAA3H,KAAA4H,yDAAA,SAAAC,EAAA/O,GAAA,IAAA0I,EAAAsE,EAAAjJ,EAAAiL,EAAAC,EAAAxO,EAAAyO,EAAAtJ,EAAAjG,EAAAwP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAArP,EAAAsP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEXnH,EAFW1I,EAEX0I,IAFWsE,EAAAhN,EAGX+D,UAHW,IAAAiJ,EAGN,WAHMA,EAAAgC,EAAAhP,EAIX0C,QAJWuM,EAAAD,EAKTvO,aALS,IAAAwO,EAKD,OALCA,EAAAC,EAAAF,EAMTpJ,iBANS,IAAAsJ,EAMG,GANHA,EAUPvP,EAAM,IAAI8M,MAAM/D,EAAI+B,OAAOvL,MAAOwJ,EAAI+B,OAAOlL,QAVtCoQ,EAAAE,KAAA,EAYcrC,GAAe,UAAAvJ,OAAWF,EAAX,UAZ7B,cAYPoL,EAZOQ,EAAAG,KAaPV,EAAaW,KAAEC,QAASb,EAAac,IAAK,CAACC,MAAO,YAClDb,EAAiBF,EAAac,IAAI,YAClCX,EAAWH,EAAac,IAAIb,GAAY,MAExCG,EAjBO,oDAAAtL,OAiB0DoL,EAjB1D,2CAAApL,OAmBHxD,EAnBG,oBAAAwD,OAoBDxD,EApBC,0BAAAwD,OAqBK2B,EArBL,cAAA3B,OAsBNqL,EAtBM,mBAyBPE,EAAQW,KAAKZ,GACnB5P,EAAIuB,IAAM,6BAA6BsO,EA1B1BG,EAAAS,OAAA,SA2BN,IAAIxD,QAAQ,SAAAC,GACjBlN,EAAImN,OAAS,WACXpE,EAAIqE,UAAUpN,EAAK,EAAG,EAAG+I,EAAI+B,OAAOvL,MAAOwJ,EAAI+B,OAAOlL,QACtDsN,EAAQ,aA9BC,yBAAA8C,EAAAU,SAAAtB,6BCCA,IAAAuB,GAAA,SAAA3B,EAAA4B,EAAAC,GAAA,OAAAC,GAAA5B,MAAA3H,KAAA4H,yDAAA,SAAAC,EAAgBrG,EAAKgB,EAAMlH,GAA3B,IAAAkO,EAAA,OAAAjB,EAAArP,EAAAsP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACWa,EAAkBlO,EAAlCE,QAAU6C,KADLoK,EAAAgB,GAKZD,GALYf,EAAAgB,GAAA,CAAAhB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAKSe,GAASC,EAAD5N,OAAAC,EAAA,EAAAD,CAAA,CAE1ByF,MACAgB,QACGlH,EAAMC,MAAM,GAJW,CAK1BC,QAASF,EAAME,WAVN,UAAAiN,EAAAmB,GAeZJ,GAfYf,EAAAmB,GAAA,CAAAnB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAeSe,GAASC,EAAD5N,OAAAC,EAAA,EAAAD,CAAA,CAE1ByF,MACAgB,QACGlH,EAAMC,MAAM,GAJW,CAK1BC,QAASF,EAAME,WApBN,UAAAiN,EAAAoB,GAwBZL,GAxBYf,EAAAoB,GAAA,CAAApB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAwBSmB,GAAiB,CACrCtI,MACA3E,GAAIvB,EAAMlB,OACVoB,QAASF,EAAME,UA3BJ,eAAAiN,EAAAE,KAAA,GA8BPoB,GAAU,CACdvI,MACA3E,GAAIvB,EAAMlB,SAhCC,eAAAqO,EAAAE,KAAA,GAmCPgB,EAAS5N,OAAAC,EAAA,EAAAD,CAAA,CAEXyF,MACAgB,QACGlH,EAAMC,MAAM,KAvCN,eAAAkN,EAAAE,KAAA,GA2CPgB,EAAS5N,OAAAC,EAAA,EAAAD,CAAA,CAEXyF,MACAgB,QACGlH,EAAMC,MAAM,KA/CN,eAAAkN,EAAAS,OAAA,SAmDN,IAAIxD,QAAQ,SAAAC,GACjBnE,EAAIwI,UACJrE,EAAQ,oBArDG,yBAAA8C,EAAAU,SAAAtB,6BCUR,SAASoC,GAAoBxL,GAAc,IAAAyL,EAV3C,SAA4BC,GAAM,IAAAC,EACbC,mBAASF,GADIG,EAAAvO,OAAAwO,EAAA,EAAAxO,CAAAqO,EAAA,GAChC9O,EADgCgP,EAAA,GACzBE,EADyBF,EAAA,GAOvC,OAJAG,oBAAU,cAIH,CAACnP,EAAOkP,GAIWE,CAAmBjM,GADGkM,EAAA5O,OAAAwO,EAAA,EAAAxO,CAAAmO,EAAA,GACzC5O,EADyCqP,EAAA,GAClCH,EADkCG,EAAA,GAE1CC,EAAYC,iBAAO,MACnBC,EAAgBD,iBAAO,MAEvBE,EAAmB,SAACxE,GACTqE,EAAUI,QAClBC,OAAO,SAASC,GACrBC,iBAAOD,EAAM3E,MAR+B,SAAA6E,IAAA,OAAAA,EAAArP,OAAAsP,EAAA,EAAAtP,CAAAwM,EAAArP,EAAAoS,KAYhD,SAAAzD,EAAwBrG,EAAKgB,EAAMlH,GAAnC,OAAAiN,EAAArP,EAAAsP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGQ4C,GAAK/J,EAAKgB,EAAMlH,GAHxB,QAIMA,EAAMwD,QAAUxD,EAAMuD,UACxBkM,EAAgB,aAAAhO,OAAcyO,KAAKC,MAAnB,SAChBjB,EAASzO,OAAAC,EAAA,EAAAD,CAAA,GACJT,EADG,CAENwD,QAAQ,EACRD,QAAQ,MATd,wBAAA4J,EAAAU,SAAAtB,OAZgDF,MAAA3H,KAAA4H,WA4ChD,OAlBA6C,oBAAW,WACT,IAAMlH,EAASqH,EAAUI,QACnBU,EAAaZ,EAAcE,QAC3BxJ,EAAM+B,EAAOa,WAAW,MACxB5B,EAAOkJ,EAAWtH,WAAW,MAE7BuH,EAAmBrQ,EAAMuD,OAAN9C,OAAAC,EAAA,EAAAD,CAAA,GACfyC,GACLlD,EAAMyD,MAEXwE,EAAOqI,aAAa,QAASD,EAAiB3T,OAC9CuL,EAAOqI,aAAa,SAAUD,EAAiBtT,QAC/CqT,EAAWE,aAAa,QAASD,EAAiB3T,OAClD0T,EAAWE,aAAa,SAAUD,EAAiBtT,QACnDmJ,EAAIiE,UAAU,EAAG,EAAGnE,OAAOuK,WAAYvK,OAAOwK,aAxCA,SAAArE,EAAA4B,EAAAC,GAAA8B,EAAAzD,MAAA3H,KAAA4H,WAyC9CmE,CAAQvK,EAAKgB,EAAMlH,KAGd,CAACA,EAAOkP,EAAUI,EAAWE,2BChDhCzT,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJwU,SAAU,GAEZC,MAAO,CACLxR,QAASlD,EAAMmC,QAAQ,GACvByL,UAAW,SACXzK,OAAQ,OAERnB,MAAOhC,EAAM2U,QAAQlP,KAAKmP,cA4DfC,OAxDf,SAAAtT,GAAmD,IAA9B0F,EAA8B1F,EAA9B0F,OAAW6N,EAAmBtQ,OAAAuQ,EAAA,EAAAvQ,CAAAjD,EAAA,YAAAyT,EACGtC,GAAoBlO,OAAAC,EAAA,EAAAD,CAAA,GAAIsQ,IAD3BG,EAAAzQ,OAAAwO,EAAA,EAAAxO,CAAAwQ,EAAA,GAC1CjR,EAD0CkR,EAAA,GACnChC,EADmCgC,EAAA,GACzB5B,EADyB4B,EAAA,GACd1B,EADc0B,EAAA,GAGjD,SAASzT,EAAaoB,GAEpBqQ,EAASzO,OAAAC,EAAA,EAAAD,CAAA,GAAIT,EAAUnB,IAGzB,IAAMnB,EAAU3B,KAEhB,OACE4B,EAAAC,EAAAC,cAAChC,EAAA,SAAD,KACE8B,EAAAC,EAAAC,cAACsT,GAAD,MACAxT,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMnD,WAAS,EAACjB,QAAS,EAAGN,UAAWJ,EAAQxB,MAE7CyB,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbhF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAOxD,UAAWJ,EAAQiT,OACxBhT,EAAAC,EAAAC,cAACiC,EAAD,CAAWrC,aAAcA,EAAcuC,MAAOA,MAIlDrC,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbhF,EAAAC,EAAAC,cAAA,OAAKC,UAAWsT,KAAOC,gBACrB1T,EAAAC,EAAAC,cAAA,UACE0D,GAAG,gBACHzD,UAAWsT,KAAOE,SAClBC,IAAKjC,KAGT3R,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMnD,WAAS,EAACoD,QAAU,UACxB9E,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAaxT,QAAQ,YAAYmD,aAAW,gCAC1CxD,EAAAC,EAAAC,cAAC4T,EAAA,EAAD,CACE7S,QAAY,WAAQsQ,EAASzO,OAAAC,EAAA,EAAAD,CAAA,GAAIT,EAAL,CAAYwD,QAAQ,OADlD,oCAGA7F,EAAAC,EAAAC,cAAC4T,EAAA,EAAD,CACE7S,QAAY,WAAOsQ,EAASzO,OAAAC,EAAA,EAAAD,CAAA,GAAIT,EAAL,CAAYuD,QAAQ,GAASL,MAD1D,yCAQNvF,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACbhF,EAAAC,EAAAC,cAACN,EAAD,CAAcE,aAAcA,MAKhCE,EAAAC,EAAAC,cAAA,UACEC,UAAW+D,IAAWuP,KAAOM,cAAeN,KAAOE,UACnDC,IAAK/B,8CClEPmC,GAAY,SAAC3R,GAAD,OAChBrC,EAAAC,EAAAC,cAAC+T,GAAA,EAAY5R,EACXrC,EAAAC,EAAAC,cAAA,QAAMgU,EAAE,gBAAgBC,KAAK,SAC7BnU,EAAAC,EAAAC,cAAA,QAAMgU,EAAE,oDAINE,GAAgB,SAAC/R,GAAD,OACpBrC,EAAAC,EAAAC,cAAC+T,GAAA,EAAY5R,EACXrC,EAAAC,EAAAC,cAAA,QAAMgU,EAAE,0OAIN9V,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJwU,SAAU,GAEZsB,WAAY,CACVxS,YAAavD,EAAMmC,QAAQ,IAE7Bf,MAAO,CACLqT,SAAU,MAIC,SAASS,KACtB,IAAMzT,EAAU3B,KAEhB,OACE4B,EAAAC,EAAAC,cAACoU,GAAA,EAAD,CAAQhQ,SAAS,SAAUb,MAAO,CAAE8Q,WAAY,cAAeC,UAAW,SACxExU,EAAAC,EAAAC,cAACuU,GAAA,EAAD,KACEzU,EAAAC,EAAAC,cAACwU,GAAA,EAAD,CAAYC,KAAK,QAAQxU,UAAWJ,EAAQsU,WAAY/T,MAAM,UAAUkD,aAAW,QACjFxD,EAAAC,EAAAC,cAAC0U,GAAD,CAAUtU,MAAM,aAElBN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWJ,EAAQL,MAAOY,MAAM,WAAzD,qBAGAN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwU,GAAA,EAAD,CACElR,aAAW,0BACXqR,gBAAc,cACdC,gBAAc,OACdxU,MAAM,WAENN,EAAAC,EAAAC,cAAC6U,GAAD,CAAezU,MAAM,8BC1BlB0U,OApBf,WAAe,IAAA7D,EACqBC,oBAAS,GAD9BC,EAAAvO,OAAAwO,EAAA,EAAAxO,CAAAqO,EAAA,GACN8D,EADM5D,EAAA,GACK6D,EADL7D,EAAA,GAGP8D,EAAUF,EACVjV,EAAAC,EAAAC,cAACkV,GAADtS,OAAA+K,OAAA,CACAtI,OAAQA,GACJC,IAENxF,EAAAC,EAAAC,cAAA,QAAMuD,MAAO,CAACC,WAAY,SAA1B,cAMJ,OAJA8N,oBAAU,WACR0D,GAAa,IACX,IAEIlV,EAAAC,EAAAC,cAAChC,EAAA,SAAD,KACHiX,ICTaE,QACW,cAA7BhN,OAAOiN,SAASC,UAEe,UAA7BlN,OAAOiN,SAASC,UAEhBlN,OAAOiN,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1V,EAAAC,EAAAC,cAACyV,GAAD,MAASzP,SAAS0P,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/H,KAAK,SAAAgI,GACjCA,EAAaC,mCElInBtY,EAAAC,QAAA,CAAkB+V,SAAA,wBAAAD,eAAA,8BAAAK,cAAA","file":"static/js/main.459f4943.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/elephant.b511dc28.svg\";","module.exports = __webpack_public_path__ + \"static/media/horse.aa2e0ee6.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/rooster.0da0e356.svg\";","import elephant from './fullSize/elephant.svg';\r\nimport horse from './fullSize/horse.svg';\r\nimport react from './fullSize/react.svg';\r\nimport rooster from './fullSize/rooster.svg';\r\n\r\nexport default  {elephant, horse, react, rooster}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport mascots from './../../assets/logos'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    // backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    cursor: 'pointer',\r\n    textTransform: 'capitalize',\r\n    width: 450,\r\n    // height: 450,\r\n    // padding: '50px 30px',\r\n  },\r\n  gridListTile: {\r\n  },\r\n  info: {\r\n    fontSize: '0.5rem'\r\n  },\r\n  mascotImg: {\r\n    height: '120px',\r\n    width: '120px',\r\n    border: '#555 2px solid',\r\n    borderRadius: '5px',\r\n  }\r\n}));\r\n\r\nconst tileData = [\r\n       {\r\n           img: mascots.elephant,\r\n           title: 'elephant',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.horse,\r\n           title: 'horse',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.rooster,\r\n           title: 'rooster',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.react,\r\n           title: 'react',\r\n           author: 'Facebook',\r\n         },\r\n];\r\n\r\n\r\nexport default function ({eventHandler}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Typography variant=\"h6\" className={classes.title} color=\"primary\">\r\n        Please choose mascot\r\n      </Typography>\r\n\r\n      <GridList cellHeight={150} spacing={3} cols={3} className={classes.gridList} >\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img} className={classes.gridListTile}>\r\n            <img\r\n              className={classes.mascotImg}\r\n              src={tile.img}\r\n              alt={tile.title}\r\n              onClick={ e => { eventHandler({mascot: e.target.alt}) } }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}","import logos from './logos'\r\nimport icons from './icons'\r\n\r\nconst fonts = [\r\n  {\r\n    value: 'Arvo',\r\n    label: 'Arvo',\r\n  },\r\n  {\r\n    value: 'AtomicAge',\r\n    label: 'AtomicAge',\r\n  },\r\n  {\r\n    value: 'Bahiana',\r\n    label: 'Bahiana',\r\n  },\r\n  {\r\n    value: 'BerkshireSwash',\r\n    label: 'BerkshireSwash',\r\n  },\r\n  {\r\n    value: 'BlendaScript',\r\n    label: 'BlendaScript',\r\n  },\r\n  {\r\n    value: 'LilitaOne',\r\n    label: 'LilitaOne',\r\n  },\r\n  {\r\n    value: 'GrandHotel',\r\n    label: 'GrandHotel',\r\n  },\r\n  {\r\n    value: 'MedulaOne',\r\n    label: 'MedulaOne',\r\n  },\r\n  {\r\n    value: 'PirataOne',\r\n    label: 'PirataOne',\r\n  },\r\n  {\r\n    value: 'Teko',\r\n    label: 'Teko',\r\n  },\r\n];\r\nexport {fonts, logos, icons}","import React, {Fragment} from 'react';\r\nimport classNames from 'classnames';\r\nimport ColorPicker from 'material-ui-color-picker';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {fonts} from './../../assets'\r\n\r\nconst maxStringSize = 30;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1, 2),\r\n    margin: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    // width: '12rem',\r\n    // fontFamily: 'AtomicAge'\r\n  },\r\n  colorPicker: {\r\n    backgroundColor: 'red'\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function ({eventHandler, props}) {\r\n  const {\r\n    texts,\r\n    outline,\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  const handleChangeTextsProp = (idx, name) => event => {\r\n    let { value } = event.target;\r\n\r\n    if ( name === 'text' &&  value.length > maxStringSize) return;\r\n    if ( name === 'text' ) value = value.toUpperCase();\r\n\r\n    const newTexts = texts;\r\n    newTexts[idx] =  {\r\n      ...texts[idx],\r\n      [name]: value,\r\n    };\r\n    eventHandler({\r\n      texts: newTexts\r\n    });\r\n  };\r\n\r\n  const handleChangeTextsColorsProp = (idx, name) => color => {\r\n    const newTexts = texts;\r\n    newTexts[idx] =  {\r\n      ...texts[idx],\r\n      [name]: color,\r\n    };\r\n    eventHandler({\r\n      texts: newTexts\r\n    });\r\n  };\r\n\r\n  const handleChangeOutlineProp = name => color => {\r\n    const newOutline = {\r\n      ...outline,\r\n      [name]: color\r\n    };\r\n    eventHandler({\r\n      outline: newOutline\r\n    });\r\n  };\r\n\r\n  const handleCheckBoxChange = name => event => {\r\n    let { checked } = event.target;\r\n\r\n    const newOutline = {\r\n      ...outline,\r\n      [name]: checked\r\n    };\r\n\r\n    eventHandler({\r\n      outline: newOutline\r\n    });\r\n  };\r\n\r\n  const checkBox = (textItem) => {\r\n    return <Checkbox\r\n    color='default'\r\n    checked={textItem.visible}\r\n    inputProps={{\r\n      'aria-label': 'checkbox with default color',\r\n    }}\r\n  />};\r\n\r\n  return <Fragment>\r\n    <h3 style={{fontFamily: props.fontFamily}} >Please select options</h3>\r\n    { texts.map( (textItem, idx) => <Paper className={classes.root} key={textItem.id}>\r\n        <TextField\r\n          id={textItem.id}\r\n          label={`${textItem.label} ${textItem.text.length} / ${maxStringSize}`}\r\n          defaultValue={textItem.text}\r\n          onChange={handleChangeTextsProp(idx, 'text')}\r\n          className={classNames(classes.textField, classes.dense)}\r\n          variant='outlined'\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position='start'>{checkBox(textItem)}</InputAdornment>,\r\n          }}\r\n        />\r\n        <TextField\r\n          id='standard-select-currency-native'\r\n          select\r\n          variant='outlined'\r\n\r\n          label='Select font'\r\n          className={classNames(classes.margin, classes.textField)}\r\n          value={textItem.fontFamily}\r\n          onChange={handleChangeTextsProp(idx, 'fontFamily')}\r\n          SelectProps={{\r\n            native: true,\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          helperText='Please select font'\r\n          margin='normal'\r\n        >\r\n          {fonts.map(option => (\r\n            <option key={option.value} value={option.value} style={{fontFamily: option.value}}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n\r\n        <Grid container justify='center' spacing={3}>\r\n          <Grid item xs={5}>\r\n            <ColorPicker\r\n              name='color'\r\n              label={`strokeStyle`}\r\n              value={textItem.strokeStyle}\r\n              onChange={handleChangeTextsColorsProp(idx, 'strokeStyle')}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <ColorPicker\r\n              name='color'\r\n              label={`filling`}\r\n              value={textItem.fillStyle}\r\n              onChange={handleChangeTextsColorsProp(idx, 'fillStyle')}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    )\r\n    }\r\n\r\n    <h3>Please define outline props</h3>\r\n\r\n    <Grid container justify='center' spacing={3}>\r\n      <Grid item xs={2}>\r\n        <Checkbox\r\n          color='default'\r\n          checked={outline.show}\r\n          onChange={handleCheckBoxChange('show')}\r\n          value={outline.show}\r\n          inputProps={{ 'aria-label': 'show' }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <ColorPicker\r\n          name='outlineColor'\r\n          label={`color`}\r\n          value={outline.color}\r\n          onChange={handleChangeOutlineProp('color')}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  </Fragment>\r\n\r\n}\r\n\r\n","const HQSize = {\r\n  width: 3600,\r\n  height: 3600\r\n};\r\n\r\nconst LQSize = {\r\n  width: 720,\r\n  height: 720\r\n};\r\n\r\n\r\nconst initialProps = {\r\n  outline: {show: true, color: '#aa2', lineWidth: 60 },\r\n  texts: [\r\n    {\r\n      id: 'topText',\r\n      label: 'top text',\r\n      fontFamily: 'Arvo',\r\n      fontSize: 1000,\r\n      text: 'TOP STRING',\r\n      width: 3200,\r\n      offsetTop: 50,\r\n      lineWidth: 26,\r\n      fillStyle: '#c35',\r\n      strokeStyle : '#226',\r\n      distortion: 500,\r\n      visible: true\r\n    },\r\n    {\r\n      id: 'bottomText',\r\n      label: 'bottom text',\r\n      fontFamily: 'Arvo',\r\n      fontSize: 900,\r\n      text: 'BOTTOM STRING',\r\n      width: 3200,\r\n      offsetTop: 2300,\r\n      lineWidth: 26,\r\n      fillStyle: '#eeaa59',\r\n      strokeStyle: '#226',\r\n      distortion: -100,\r\n      visible: true\r\n    },\r\n  ],\r\n  saveHQ: false,\r\n  saveLQ: false,\r\n  canva: {\r\n    ...LQSize,\r\n  }\r\n};\r\n\r\nexport {HQSize, LQSize, initialProps};","  export default function(options) {\n    var fontSize = options.fontSize || getComputedStyle(options.element, 'font-size') || '100px';\n    var fontWeight = options.fontWeight || getComputedStyle(options.element, 'font-weight') || 'normal';\n    var fontFamily = options.fontFamily || getComputedStyle(options.element, 'font-family') || 'Arial';\n    var font = fontWeight + ' ' + fontSize + ' ' + fontFamily;\n    \n    var boundingRect = measureBoundingRect(options.text, font);\n    \n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.width = boundingRect.width;\n    canvas.height = boundingRect.height * 1.2; // Bounding rect height may not be enough as fillText() will render from the baseline \n    context.font = font;\n    context.fillText(options.text, 0, fontSize.replace('px', ''));\n    \n    var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    var result = measure({ width: canvas.width, height: canvas.height, imageData: imageData, options: options });\n    \n    if (!result.foundTopText) {\n      return { width: boundingRect.width, height: 0, yOffset: 0 };\n    }\n    \n    if (!result.foundBottomText) {\n      return { width: boundingRect.width, height: canvas.height - result.topTextY, yOffset: -result.topTextY };\n    }\n    \n    return { width: boundingRect.width, height: result.bottomTextY - result.topTextY, yOffset: -result.topTextY };\n  }\n  \n  const measureBoundingRect = function(text, font) {\n    var temporaryContainer = document.createElement('div');\n    temporaryContainer.style.position = 'fixed';\n    temporaryContainer.style.top = '0px';\n    temporaryContainer.style.left = '0px';\n    temporaryContainer.style.width = '0px';\n    temporaryContainer.style.height = '0px';\n    temporaryContainer.style.overflow = 'hidden';\n    \n    var temporaryElement = document.createElement('span');\n    temporaryElement.style.font = font;\n    temporaryElement.innerText = text;\n    document.body.appendChild(temporaryElement);\n    var bBox = temporaryElement.getBoundingClientRect();\n    document.body.removeChild(temporaryElement);\n    return bBox;\n  }\n  \n  function Iterator(maxWidth, maxHeight) {\n    this.x = 0;\n    this.y = 0;\n    this.index = 0;\n    \n    this.moveRight = function() {\n      if (this.arePixelsToTheRight()) {\n        this.x++;\n        this.index += 4;\n      } else {\n        this.moveDown();\n      }\n    }\n    \n    this.moveDown = function() {\n      this.x = 0;\n      this.y++;\n      this.index = this.y * maxWidth * 4;\n    }\n    \n    this.arePixelsToTheRight = function() {\n      return this.x < maxWidth - 1;\n    }\n    \n    this.noMorePixels = function() {\n      return this.index >= (maxWidth * maxHeight * 4) - 4;\n    }\n  }\n  \n  const measure = function(parameters) {\n    // Find the top and bottom of the text by finding which rows are entirely full of transparent pixels.\n    // The difference between the top-most transparent row and the bottom-most transparent row is the text height.    \n    var iterator = new Iterator(parameters.width, parameters.height);\n    var foundTopText = false;\n    var foundBottomText = false;\n    var topTextY = null;\n    var bottomTextY = null;\n    var allPixelsInThisRowAreWhite;\n    while (!iterator.noMorePixels()) {\n      if (!foundTopText) {\n        // We have only encounted rows that are totally white so far, as soon as we \n        // find a pixel that is not white we will count that as the top of the text\n        if (isTransparent(parameters.imageData, iterator.index)) {\n          iterator.moveRight();\n        } else {\n          topTextY = iterator.y;\n          foundTopText = true;\n          iterator.moveDown();\n        }\n      } else {\n        // We are looping through the rows until we find a row which is all white, \n        // in which case we have reached the bottom of the text\n        if (!iterator.arePixelsToTheRight()) {\n          if (allPixelsInThisRowAreWhite) {\n            bottomTextY = iterator.y;\n            foundBottomText = true;\n            break;\n          }  \n          allPixelsInThisRowAreWhite = true;\n          iterator.moveDown();\n        }\n        if (!isTransparent(parameters.imageData, iterator.index)) {\n          allPixelsInThisRowAreWhite = false;\n          iterator.moveDown();\n        } else {\n          iterator.moveRight();\n        }\n      }\n    }\n    \n    return { foundTopText: foundTopText, foundBottomText: foundBottomText, topTextY: topTextY, bottomTextY: bottomTextY };\n  }\n  \n  function isTransparent(imageData, index) {\n    return imageData.data[index + 3] === 0; // If there is zero alpha then it is transparent\n  }\n  \n  function getComputedStyle(element, property) {\n    return element ? window.getComputedStyle(element)[property] : null ;\n  }\n","function scaleImageData({ctx, imageData,  amplitude, curve}) {\r\n  const halfWidth = imageData.width * 0.5 || ctx.width / 2;\r\n  const orientation = amplitude < 0 ? -1 : 0;\r\n  var scaled = ctx.createImageData(imageData.width, imageData.height + Math.abs(amplitude));\r\n  for(var row = 0; row < imageData.height; row++) {\r\n    for(var col = 0; col < imageData.width; col++) {\r\n      var sourcePixel = [\r\n        imageData.data[(row * imageData.width + col) * 4 + 0],\r\n        imageData.data[(row * imageData.width + col) * 4 + 1],\r\n        imageData.data[(row * imageData.width + col) * 4 + 2],\r\n        imageData.data[(row * imageData.width + col) * 4 + 3]\r\n      ];\r\n      var delta = (col - halfWidth) / halfWidth;\r\n      const dy = Math.round(amplitude * curve(delta) ) + orientation * amplitude;\r\n      var destRow = row + dy;\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 0] = sourcePixel[0];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 1] = sourcePixel[1];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 2] = sourcePixel[2];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 3] = sourcePixel[3];\r\n    }\r\n  }\r\n\r\n  return scaled;\r\n}\r\n\r\nexport default scaleImageData","import textMeasurer from '../utils/textmeasurer'\r\nimport scaleImageData from '../utils/scaleImageData'\r\n\r\nexport default function(\r\n  {\r\n    ctx,\r\n    tCtx,\r\n    text = '1234567890abcdefghihklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n    fontSize = 80,\r\n    fontFamily = 'AtomicAge',\r\n    width = 3400,\r\n    offsetTop = 50,\r\n    distortion = 0,\r\n    lineWidth = 3,\r\n    fillStyle = '#4444f1',\r\n    strokeStyle = '#4444f1',\r\n\r\n    designedSize = {\r\n      width: 3600,\r\n      height: 3600\r\n    }\r\n  }\r\n) {\r\n\r\n  const {\r\n    width: designedWidth,\r\n    height: designedHeight } = designedSize;\r\n  const { width: ctxWidth, height: ctxHeight } = ctx.canvas;\r\n  // const { width: tCtxWidth, height: tCtxHeight } = tCtx.canvas;\r\n  const XFactor = ctxWidth / designedWidth;\r\n  const YFactor = ctxHeight / designedHeight;\r\n  const OFactor = Math.sqrt(XFactor * XFactor + YFactor * YFactor);\r\n\r\n\r\n  const leftPadding = (designedWidth - width) * XFactor / 2;\r\n\r\n  // ctx.fillStyle = 'rgba(10,0,0, 0.05)';\r\n  // ctx.fillRect(0,0, ctxWidth, ctxHeight);\r\n\r\n  /* detect scale factor to fit short text into box width */\r\n  const {\r\n    width: textWidth, height: textHeight,\r\n    // yOffset\r\n  } = textMeasurer({\r\n    text,\r\n    fontSize: `${YFactor * fontSize}px`,\r\n    fontFamily\r\n  });\r\n  const scaleFActor = ( XFactor * width / textWidth > 1 ) ? XFactor * width / textWidth : 1;\r\n  const scaledLineW = YFactor / scaleFActor * lineWidth / 2;\r\n  // console.log('lineWidth=', lineWidth, 'offsetTop=', offsetTop, 'strokeStyle=', strokeStyle, 'scaleFActor=', scaleFActor, 'OFactor=', OFactor, 'yOffset=', yOffset);\r\n\r\n  const relativeSize = {\r\n    w: XFactor / scaleFActor * width,\r\n    h: textHeight\r\n  };\r\n\r\n  const coord = {\r\n    x0: 0,\r\n    y0: scaledLineW,\r\n    x: relativeSize.w,\r\n    y: relativeSize.h,\r\n  };\r\n\r\n  // tCtx.textBaseline = 'bottom';\r\n  tCtx.strokeStyle = strokeStyle;\r\n  tCtx.fillStyle = fillStyle;\r\n\r\n  /****** DRAW BOUNDARY OF THE TEXT ******/\r\n  // tCtx.lineWidth = 1;\r\n  // tCtx.strokeRect(coord.x0, coord.y0 + 1, coord.x-1, textHeight + scaledLineW);\r\n\r\n  tCtx.lineWidth = OFactor / scaleFActor * lineWidth;\r\n  tCtx.textAlign = 'left';\r\n  tCtx.font=`${ YFactor * fontSize }px ${fontFamily}`;\r\n\r\n  tCtx.fillText(text, coord.x0, (textHeight + scaledLineW ), XFactor * width);\r\n  tCtx.strokeText(text, coord.x0, (textHeight + scaledLineW ), XFactor * width);\r\n\r\n  const amplitude = distortion * YFactor;\r\n  if (distortion !== 0 ) {\r\n    const imageData = tCtx.getImageData(\r\n      0, 0,\r\n      relativeSize.w, relativeSize.h + Math.abs(amplitude)\r\n    );\r\n    const scaledImageData = scaleImageData({ctx: tCtx, imageData, amplitude, curve: x => x * x});\r\n    tCtx.putImageData(scaledImageData, coord.x0, 0);\r\n  }\r\n\r\n  const img = new Image();\r\n  img.src = tCtx.canvas.toDataURL();\r\n  tCtx.clearRect(0, 0, tCtx.canvas.width, tCtx.canvas.height);\r\n\r\n  return new Promise(resolve => {\r\n    img.onload = function (){\r\n      ctx.drawImage(img,\r\n        0, 0,\r\n        relativeSize.w, relativeSize.h + 2 * Math.abs(amplitude),\r\n        leftPadding, offsetTop * YFactor,\r\n        width * XFactor, textHeight + 2 * Math.abs(amplitude)\r\n      );\r\n      resolve('drown')\r\n    };\r\n  });\r\n}\r\n\r\n","import mascots from './../assets/logos'\r\n\r\nexport default function (\r\n  {\r\n    ctx,\r\n    id = 'elephant'\r\n  }\r\n) {\r\n  const img = new Image(ctx.canvas.width, ctx.canvas.height);\r\n  img.src = mascots[id];\r\n\r\n  return new Promise(resolve => {\r\n    img.onload = function (){\r\n      ctx.drawImage(img, 0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      resolve('drown')\r\n    };\r\n  });\r\n}","export default function (wrappedComp, props) {\r\n  const {\r\n    outline: {\r\n      color = '#f00',\r\n      lineWidth = 26\r\n    } ,\r\n    offsetTop,\r\n    lineWidth: textLineWidth\r\n  } = props;\r\n  const newOffsetTop = offsetTop - lineWidth / 2;\r\n  const newLineWidth = lineWidth + textLineWidth;\r\n  const newProps = {\r\n    ...props,\r\n    fillStyle: color,\r\n    strokeStyle: color,\r\n    lineWidth: newLineWidth,\r\n    offsetTop: newOffsetTop,\r\n  };\r\n\r\n  return wrappedComp(newProps)\r\n}","const request = (options) => {\r\n  const headers = new Headers({\r\n  });\r\n\r\n  const defaults = {headers};\r\n  // eslint-disable-next-line no-param-reassign\r\n  options = Object.assign({}, defaults, options);\r\n  return fetch(options.url, options)\r\n    .then(response =>\r\n      response.text().then(text => {\r\n        if(!response.ok) {\r\n          return Promise.reject(text);\r\n        }\r\n        return text;\r\n      })\r\n    );\r\n};\r\n\r\nexport function getSVGImage(fileName) {\r\n  return request({\r\n    url: fileName,\r\n    method: 'GET',\r\n  });\r\n}\r\n\r\nexport function getJSONSVGImage(fileName) {\r\n  let options = {\r\n    url: fileName,\r\n    method: 'GET',\r\n  };\r\n\r\n  const headers = new Headers({\r\n    'Content-Type': 'application/json',\r\n  });\r\n\r\n  const defaults = {headers};\r\n  // eslint-disable-next-line no-param-reassign\r\n  options = Object.assign({}, defaults, options);\r\n  return fetch(process.env.PUBLIC_URL +options.url, options)\r\n    .then(response =>\r\n      response.json().then(json => {\r\n        // console.log(response);\r\n        if(!response.ok) {\r\n          console.log('reject')\r\n          return Promise.reject(json);\r\n        }\r\n        return json;\r\n      })\r\n    );\r\n\r\n\r\n\r\n}","import _ from 'lodash'\r\n// import {getSVGImage} from './../utils/loadFile'\r\nimport {getJSONSVGImage} from './../utils/loadFile'\r\n\r\nexport default async function (\r\n  {\r\n    ctx,\r\n    id = 'elephant',\r\n    outline: {\r\n      color = '#ff0',\r\n      lineWidth = 66\r\n    }\r\n  }\r\n) {\r\n  const img = new Image(ctx.canvas.width, ctx.canvas.height);\r\n\r\n  const JSONSVGImage = await getJSONSVGImage(`/JSONS/${id}.json`);\r\n  const outlineTag = _.findKey( JSONSVGImage.svg, {'-id': 'OUTLINE'} );\r\n  const outLineViewBox = JSONSVGImage.svg['-viewBox'];\r\n  const outLineD = JSONSVGImage.svg[outlineTag]['-d'];\r\n\r\n  const outlineXML = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"${outLineViewBox}\">\r\n    <path id=\"OUTLINE\" \r\n    fill=\"${color}\" \r\n    stroke=\"${color}\" \r\n    stroke-width=\"${lineWidth}\"\r\n    d=\"${outLineD}\"/>\r\n    </svg>`;\r\n\r\n  const svg64 = btoa(outlineXML);\r\n  img.src = 'data:image/svg+xml;base64,'+svg64;\r\n  return new Promise(resolve => {\r\n    img.onload = function (){\r\n      ctx.drawImage(img, 0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      resolve('drown')\r\n    };\r\n  });\r\n}\r\n\r\n// export default async function (\r\n//   {\r\n//     ctx,\r\n//     id = 'elephant'\r\n//   }\r\n// ) {\r\n//   const img = new Image(ctx.canvas.width, ctx.canvas.height);\r\n//\r\n//   // console.log('mascots[id] =', mascots[id]);\r\n//   // const SVGImage = await getSVGImage(mascots[id]);\r\n//   const JSONSVGImage = await getJSONSVGImage(`/JSONS/${id}.json`);\r\n//   console.log('JSONSVGImage =', JSONSVGImage);\r\n//   const outlineTag = _.findKey(\r\n//     JSONSVGImage.svg,\r\n//     {'-id': 'OUTLINE'}\r\n//     // o => { console.log(o); return o['-id'] === 'OUTLINE' }\r\n//   );\r\n//   const outLineD = JSONSVGImage.svg[outlineTag]['-d']\r\n//   console.log('outlineTag =', outlineTag, outLineD);\r\n//\r\n//\r\n//   // var svgURL = 'data:image/svg+xml; charset=utf8, ' + encodeURIComponent(svgData);\r\n//\r\n//   // img.src = mascots[id];\r\n//   // img.src = 'data:image/svg+xml; charset=utf8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\"><g fill=\"#61DAFB\"><path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/><circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/><path d=\"M520.5 78.1z\"/></g></svg>';\r\n//   //\r\n//   // return new Promise(resolve => {\r\n//   //   img.onload = function (){\r\n//   //     // console.log(mascots[id], img)\r\n//   //     ctx.drawImage(img, 0, 0, ctx.canvas.width, ctx.canvas.height);\r\n//   //     resolve('drown')\r\n//   //   };\r\n//   // });\r\n//\r\n//\r\n//   // let p = new Path2D('M10 10 h 80 v 80 h -80 Z');\r\n//   let p = new Path2D(outLineD);\r\n//   ctx.fill(p);\r\n// }\r\n","import DrawText from './drawTextV2'\r\nimport DrawImage from './drawImage'\r\nimport Outlined from './outlined'\r\nimport DrawImageOutline from './drawImageOutline'\r\n\r\nexport default async function (ctx, tCtx, props) {\r\n  const { outline: {show: outlineShow}, } = props;\r\n  // ctx.fillStyle = '#fff';\r\n  // ctx.save();\r\n  /* draw outlined TOP text*/\r\n  (outlineShow && await Outlined(DrawText,\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      ...props.texts[0],\r\n      outline: props.outline,\r\n    }\r\n  ));\r\n\r\n  /* draw outlined BOTTOM text*/\r\n  (outlineShow && await Outlined(DrawText,\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      ...props.texts[1],\r\n      outline: props.outline,\r\n    }\r\n  ));\r\n\r\n  (outlineShow && await DrawImageOutline({\r\n    ctx,\r\n    id: props.mascot,\r\n    outline: props.outline,\r\n  }));\r\n\r\n  await DrawImage({\r\n    ctx,\r\n    id: props.mascot,\r\n  });\r\n\r\n  await DrawText(\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      ...props.texts[0],\r\n    }\r\n  );\r\n  /* draw BOTTOM text*/\r\n  await DrawText(\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      ...props.texts[1],\r\n    }\r\n  );\r\n\r\n  return new Promise(resolve => {\r\n    ctx.restore();\r\n    resolve('all are drown')\r\n  });\r\n}\r\n\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport { saveAs } from 'file-saver';\r\nimport { HQSize } from './../constants/initSettings';\r\nimport draw from './drawingSequence'\r\n\r\nexport function usePersistentState(init) {\r\n  const [props, setProps] = useState(init);\r\n\r\n  useEffect(() => {\r\n    // localStorage.setItem('draw-app', JSON.stringify(props))\r\n    // console.log('props changed', props)\r\n  });\r\n  return [props, setProps]\r\n}\r\n\r\nexport function usePersistentCanvas(initialProps) {\r\n  const [props, setProps] = usePersistentState(initialProps);\r\n  const canvasRef = useRef(null);\r\n  const textCanvasREf = useRef(null);\r\n\r\n  const saveCanvasToFile = (fileName) => {\r\n    const canvas = canvasRef.current;\r\n    canvas.toBlob(function(blob) {\r\n      saveAs(blob, fileName);\r\n    });\r\n  };\r\n\r\n  async function drawing (ctx, tCtx, props) {\r\n    // console.log('drawing props =', props);\r\n\r\n    await draw(ctx, tCtx, props);\r\n    if (props.saveLQ || props.saveHQ) {\r\n      saveCanvasToFile(`export_LQ_${Date.now()}.png`);\r\n      setProps({\r\n        ...props,\r\n        saveLQ: false,\r\n        saveHQ: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect( () => {\r\n    const canvas = canvasRef.current;\r\n    const textCanvas = textCanvasREf.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const tCtx = textCanvas.getContext('2d');\r\n\r\n    const canvasResolution = props.saveHQ\r\n       ? { ...HQSize } // set HQ resolution for render for capture the image\r\n       : props.canva;\r\n\r\n    canvas.setAttribute('width', canvasResolution.width);\r\n    canvas.setAttribute('height', canvasResolution.height);\r\n    textCanvas.setAttribute('width', canvasResolution.width);\r\n    textCanvas.setAttribute('height', canvasResolution.height);\r\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n    drawing(ctx, tCtx, props)\r\n  });\r\n\r\n  return [props, setProps, canvasRef, textCanvasREf]\r\n}\r\n","import React, {Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { SidePanel, MascotsPanel, Header } from './../'\r\nimport { usePersistentCanvas } from './../../canvas'\r\nimport styles from './Index.module.scss'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction MainLayout({HQSize, ...theRestInitProps}) {\r\n  const [props, setProps, canvasRef, textCanvasREf] = usePersistentCanvas({...theRestInitProps});\r\n\r\n  function eventHandler(e) {\r\n    // console.log('eventHandler', e);\r\n    setProps({...props, ...e })\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <Grid container spacing={3} className={classes.root}>\r\n\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>\r\n            <SidePanel eventHandler={eventHandler} props={props}/>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={5}>\r\n          <div className={styles.canvaContainer}>\r\n            <canvas\r\n              id='THEMAINCANVAS'\r\n              className={styles.canvases}\r\n              ref={canvasRef}\r\n            />\r\n          </div>\r\n          <Grid container justify = \"center\">\r\n            <ButtonGroup variant=\"contained\" aria-label=\"small contained button group\">\r\n              <Button\r\n                onClick = { () => { setProps({...props, saveLQ: true }) }}\r\n              >Save as low-quality PNG (72 DPI)</Button>\r\n              <Button\r\n                onClick = { () => {setProps({...props, saveHQ: true, ...HQSize }) }}\r\n              >Save as high-quality PNG (300 DPI)</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={4}>\r\n          <MascotsPanel eventHandler={eventHandler}/>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <canvas\r\n        className={classNames(styles.serviceCanvas, styles.canvases)}\r\n        ref={textCanvasREf}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default MainLayout\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nconst MenuIcon  = (props) => (\r\n  <SvgIcon {...props}>\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\r\n  </SvgIcon>\r\n);\r\n\r\nconst AccountCircle = (props) => (\r\n  <SvgIcon {...props}>\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"/>\r\n  </SvgIcon>\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\"  style={{ background: 'transparent', boxShadow: 'none'}}>\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon color=\"primary\"/>\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title} color=\"primary\">\r\n          Create your style\r\n        </Typography>\r\n        <div>\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle color=\"primary\"/>\r\n          </IconButton>\r\n\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}","import React, {Fragment, useEffect, useState} from 'react';\r\nimport { MainLayout } from './UI/'\r\nimport {HQSize, initialProps} from './constants/initSettings';\r\nimport './Index.module.scss'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  const content = isMounted\r\n      ? <MainLayout\r\n        HQSize={HQSize}\r\n        {...initialProps}\r\n      />\r\n    : <span style={{fontFamily: 'Arvo'}}>Loading...</span>;\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n  } , []);\r\n\r\n  return (<Fragment>\r\n      {content}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvases\":\"Index_canvases__3cujD\",\"canvaContainer\":\"Index_canvaContainer__xHRDS\",\"serviceCanvas\":\"Index_serviceCanvas__B4yWI\"};"],"sourceRoot":""}