{"version":3,"sources":["assets/logos/fullSize/elephant.svg","assets/logos/fullSize/horse.svg","assets/logos/fullSize/react.svg","assets/logos/fullSize/rooster.svg","assets/logos/index.js","UI/panel/mascotsPanel.js","assets/index.js","UI/panel/sidePanel.js","constants/initSettings.js","utils/textmeasurer.js","utils/scaleImageData.js","canvas/drawTextV2.js","canvas/drawImage.js","canvas/drawingSequence.js","canvas/index.js","UI/mainLayout/mainLayout.js","UI/header/header.js","App.js","serviceWorker.js","index.js","UI/mainLayout/Index.module.scss"],"names":["module","exports","__webpack_require__","p","logos","elephant","horse","react","rooster","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","cursor","textTransform","width","gridListTile","info","fontSize","mascotImg","height","border","borderRadius","tileData","img","mascots","title","author","mascotsPanel","_ref","eventHandler","classes","react_default","a","createElement","className","Typography","variant","color","GridList","cellHeight","spacing","cols","map","tile","GridListTile","key","src","alt","onClick","e","mascot","target","fonts","value","label","padding","margin","container","textField","marginLeft","marginRight","fontFamily","colorPicker","backgroundColor","dense","marginTop","menu","sidePanel","props","texts","handleChangeTextsProp","idx","name","event","length","newTexts","Object","objectSpread","defineProperty","toUpperCase","handleChangeTextsColorsProp","style","textItem","Paper","id","TextField","concat","text","defaultValue","onChange","classNames","select","SelectProps","native","MenuProps","helperText","option","Grid","justify","item","xs","lib_default","strokeStyle","fillStyle","HQSize","initialProps","offsetTop","lineWidth","distortion","saveHQ","saveLQ","canva","measureBoundingRect","font","temporaryContainer","document","position","top","left","temporaryElement","innerText","body","appendChild","bBox","getBoundingClientRect","removeChild","Iterator","maxWidth","maxHeight","this","x","y","index","moveRight","arePixelsToTheRight","moveDown","noMorePixels","measure","parameters","allPixelsInThisRowAreWhite","iterator","foundTopText","foundBottomText","topTextY","bottomTextY","isTransparent","imageData","data","getComputedStyle","element","property","window","scaleImageData","ctx","amplitude","curve","halfWidth","orientation","scaled","createImageData","Math","abs","row","col","sourcePixel","delta","destRow","round","drawTextV2","tCtx","_ref$text","_ref$fontSize","_ref$fontFamily","_ref$width","_ref$offsetTop","_ref$distortion","_ref$lineWidth","_ref$fillStyle","_ref$strokeStyle","_ref$designedSize","designedSize","designedWidth","designedHeight","_ctx$canvas","canvas","ctxWidth","ctxHeight","XFactor","YFactor","leftPadding","_textMeasurer","options","fontWeight","boundingRect","context","getContext","fillText","replace","getImageData","result","yOffset","textMeasurer","textWidth","textHeight","scaleFActor","console","log","coord","stroke","textAlign","strokeText","scaledImageData","putImageData","Image","toDataURL","clearRect","Promise","resolve","onload","drawImage","_ref$id","drawingSequence","_x","_x2","_x3","drawingSequence_ref","apply","arguments","_callee","regenerator_default","wrap","_context","prev","next","save","DrawText","outlined","outline1","outline2","DrawImage","abrupt","restore","stop","wrappedComp","_props$outline","_props$outline$color","lineWidthInside","_props$outline2","_props$outline2$color","lineWidthOuter","newFontSize","newOffsetTop","newWidth","usePersistentCanvas","_usePersistentState","init","_useState","useState","JSON","parse","localStorage","getItem","_useState2","slicedToArray","setProps","useEffect","setItem","stringify","usePersistentState","_usePersistentState2","canvasRef","useRef","textCanvasREf","saveCanvasToFile","fileName","current","toBlob","blob","saveAs","_drawing","asyncToGenerator","mark","draw","Date","now","textCanvas","canvasResolution","setAttribute","innerWidth","innerHeight","drawing","flexGrow","paper","palette","secondary","MainLayout","_usePersistentCanvas","_usePersistentCanvas2","Header","styles","canvaContainer","canvases","ref","ButtonGroup","aria-label","Button","serviceCanvas","MenuIcon","SvgIcon","d","fill","AccountCircle","menuButton","AppBar","background","boxShadow","Toolbar","IconButton","edge","header_MenuIcon","aria-controls","aria-haspopup","header_AccountCircle","App","isMounted","setIsMounted","content","mainLayout","assign","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bce4fb68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/elephant.43105bae.svg\";","module.exports = __webpack_public_path__ + \"static/media/horse.aa2e0ee6.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/rooster.0da0e356.svg\";","import elephant from './fullSize/elephant.svg';\r\nimport horse from './fullSize/horse.svg';\r\nimport react from './fullSize/react.svg';\r\nimport rooster from './fullSize/rooster.svg';\r\n\r\nexport default  {elephant, horse, react, rooster}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport mascots from './../../assets/logos'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    // backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    cursor: 'pointer',\r\n    textTransform: 'capitalize',\r\n    width: 450,\r\n    // height: 450,\r\n    // padding: '50px 30px',\r\n  },\r\n  gridListTile: {\r\n  },\r\n  info: {\r\n    fontSize: '0.5rem'\r\n  },\r\n  mascotImg: {\r\n    height: '120px',\r\n    width: '120px',\r\n    border: '#555 2px solid',\r\n    borderRadius: '5px',\r\n  }\r\n}));\r\n\r\nconst tileData = [\r\n       {\r\n           img: mascots.elephant,\r\n           title: 'elephant',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.horse,\r\n           title: 'horse',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.rooster,\r\n           title: 'rooster',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.react,\r\n           title: 'react',\r\n           author: 'Facebook',\r\n         },\r\n];\r\n\r\n\r\nexport default function ({eventHandler}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Typography variant=\"h6\" className={classes.title} color=\"primary\">\r\n        Please choose mascot\r\n      </Typography>\r\n\r\n      <GridList cellHeight={150} spacing={3} cols={3} className={classes.gridList} >\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img} className={classes.gridListTile}>\r\n            <img\r\n              className={classes.mascotImg}\r\n              src={tile.img}\r\n              alt={tile.title}\r\n              onClick={ e => { eventHandler({mascot: e.target.alt}) } }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}","import logos from './logos'\r\nimport icons from './icons'\r\n\r\nconst fonts = [\r\n  {\r\n    value: 'Arvo',\r\n    label: 'Arvo',\r\n  },\r\n  {\r\n    value: 'AtomicAge',\r\n    label: 'AtomicAge',\r\n  },\r\n  {\r\n    value: 'Bahiana',\r\n    label: 'Bahiana',\r\n  },\r\n  {\r\n    value: 'BerkshireSwash',\r\n    label: 'BerkshireSwash',\r\n  },\r\n  {\r\n    value: 'BlendaScript',\r\n    label: 'BlendaScript',\r\n  },\r\n  {\r\n    value: 'LilitaOne',\r\n    label: 'LilitaOne',\r\n  },\r\n  {\r\n    value: 'GrandHotel',\r\n    label: 'GrandHotel',\r\n  },\r\n  {\r\n    value: 'MedulaOne',\r\n    label: 'MedulaOne',\r\n  },\r\n  {\r\n    value: 'PirataOne',\r\n    label: 'PirataOne',\r\n  },\r\n  {\r\n    value: 'Teko',\r\n    label: 'Teko',\r\n  },\r\n];\r\nexport {fonts, logos, icons}","import React, {Fragment} from 'react';\r\nimport classNames from 'classnames';\r\nimport ColorPicker from 'material-ui-color-picker';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {fonts} from './../../assets'\r\n\r\nconst maxStringSize = 30;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1, 2),\r\n    margin: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: '12rem',\r\n    fontFamily: 'AtomicAge'\r\n  },\r\n  colorPicker: {\r\n    backgroundColor: 'red'\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function ({eventHandler, props}) {\r\n  const { texts } = props;\r\n  const classes = useStyles();\r\n\r\n  const handleChangeTextsProp = (idx, name) => event => {\r\n    const { value } = event.target;\r\n\r\n    if ( name === 'text' &&  value.length > maxStringSize) return;\r\n\r\n    const newTexts = texts;\r\n    newTexts[idx] =  {\r\n      ...texts[idx],\r\n      [name]: value.toUpperCase(),\r\n    };\r\n    eventHandler({\r\n      texts: newTexts\r\n    });\r\n  };\r\n\r\n  const handleChangeTextsColorsProp = (idx, name) => color => {\r\n    const newTexts = texts;\r\n    newTexts[idx] =  {\r\n      ...texts[idx],\r\n      [name]: color,\r\n    };\r\n    eventHandler({\r\n      texts: newTexts\r\n    });\r\n  };\r\n\r\n\r\n  return <Fragment>\r\n    <h3 style={{fontFamily: props.fontFamily}} >Please select options</h3>\r\n    { texts.map( (textItem, idx) => <Paper className={classes.root} key={textItem.id}>\r\n      <TextField\r\n        id={textItem.id}\r\n        label={`${textItem.label} ${textItem.text.length} / ${maxStringSize}`}\r\n        defaultValue={textItem.text}\r\n        onChange={handleChangeTextsProp(idx, 'text')}\r\n        className={classNames(classes.textField, classes.dense)}\r\n      />\r\n      <TextField\r\n        id='standard-select-currency-native'\r\n        select\r\n        label='Select font'\r\n        className={classes.textField}\r\n        value={props.fontFamily}\r\n        onChange={handleChangeTextsProp(idx, 'fontFamily')}\r\n        SelectProps={{\r\n          native: true,\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        helperText='Please select font'\r\n        margin='normal'\r\n      >\r\n        {fonts.map(option => (\r\n          <option key={option.value} value={option.value}  style={{fontFamily: option.value}}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n\r\n      <Grid container justify=\"center\" spacing={3}>\r\n        <Grid item xs={5}>\r\n          <ColorPicker\r\n            name='color'\r\n            label={`strokeStyle`}\r\n            value={textItem.strokeStyle}\r\n            onChange={handleChangeTextsColorsProp(idx, 'strokeStyle')}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <ColorPicker\r\n            name='color'\r\n            label={`filling`}\r\n            value={textItem.fillStyle}\r\n            onChange={handleChangeTextsColorsProp(idx, 'fillStyle')}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      </Paper>)\r\n    }\r\n  </Fragment>\r\n\r\n}\r\n\r\n","const HQSize = {\r\n    width: 3600,\r\n    height: 3600\r\n};\r\n\r\nconst LQSize = {\r\n    width: 720,\r\n    height: 720\r\n};\r\n\r\n\r\nconst initialProps = {\r\n  texts: [\r\n    {\r\n      id: 'topText',\r\n      label: 'top text',\r\n      fontFamily: 'AtomicAge',\r\n      fontSize: 1000,\r\n      text: 'TOP STRING',\r\n      width: 3200,\r\n      offsetTop: 50,\r\n      lineWidth: 26,\r\n      fillStyle: '#c35',\r\n      strokeStyle : '#226',\r\n      distortion: 500,\r\n    },\r\n    {\r\n      id: 'bottomText',\r\n      label: 'bottom text',\r\n      fontFamily: 'AtomicAge',\r\n      fontSize: 900,\r\n      text: 'BOTTOM STRING',\r\n      width: 3200,\r\n      offsetTop: 2300,\r\n      lineWidth: 26,\r\n      fillStyle: '#eeaa59',\r\n      strokeStyle: '#226',\r\n      distortion: -500,\r\n    },\r\n  ],\r\n  saveHQ: false,\r\n  saveLQ: false,\r\n  canva: {\r\n    ...LQSize,\r\n  }\r\n};\r\n\r\nexport {HQSize, LQSize, initialProps};","  export default function(options) {\n    var fontSize = options.fontSize || getComputedStyle(options.element, 'font-size') || '100px';\n    var fontWeight = options.fontWeight || getComputedStyle(options.element, 'font-weight') || 'normal';\n    var fontFamily = options.fontFamily || getComputedStyle(options.element, 'font-family') || 'Arial';\n    var font = fontWeight + ' ' + fontSize + ' ' + fontFamily;\n    \n    var boundingRect = measureBoundingRect(options.text, font);\n    \n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.width = boundingRect.width;\n    canvas.height = boundingRect.height * 1.2; // Bounding rect height may not be enough as fillText() will render from the baseline \n    context.font = font;\n    context.fillText(options.text, 0, fontSize.replace('px', ''));\n    \n    var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    var result = measure({ width: canvas.width, height: canvas.height, imageData: imageData, options: options });\n    \n    if (!result.foundTopText) {\n      return { width: boundingRect.width, height: 0, yOffset: 0 };\n    }\n    \n    if (!result.foundBottomText) {\n      return { width: boundingRect.width, height: canvas.height - result.topTextY, yOffset: -result.topTextY };\n    }\n    \n    return { width: boundingRect.width, height: result.bottomTextY - result.topTextY, yOffset: -result.topTextY };\n  }\n  \n  const measureBoundingRect = function(text, font) {\n    var temporaryContainer = document.createElement('div');\n    temporaryContainer.style.position = 'fixed';\n    temporaryContainer.style.top = '0px';\n    temporaryContainer.style.left = '0px';\n    temporaryContainer.style.width = '0px';\n    temporaryContainer.style.height = '0px';\n    temporaryContainer.style.overflow = 'hidden';\n    \n    var temporaryElement = document.createElement('span');\n    temporaryElement.style.font = font;\n    temporaryElement.innerText = text;\n    document.body.appendChild(temporaryElement);\n    var bBox = temporaryElement.getBoundingClientRect();\n    document.body.removeChild(temporaryElement);\n    return bBox;\n  }\n  \n  function Iterator(maxWidth, maxHeight) {\n    this.x = 0;\n    this.y = 0;\n    this.index = 0;\n    \n    this.moveRight = function() {\n      if (this.arePixelsToTheRight()) {\n        this.x++;\n        this.index += 4;\n      } else {\n        this.moveDown();\n      }\n    }\n    \n    this.moveDown = function() {\n      this.x = 0;\n      this.y++;\n      this.index = this.y * maxWidth * 4;\n    }\n    \n    this.arePixelsToTheRight = function() {\n      return this.x < maxWidth - 1;\n    }\n    \n    this.noMorePixels = function() {\n      return this.index >= (maxWidth * maxHeight * 4) - 4;\n    }\n  }\n  \n  const measure = function(parameters) {\n    // Find the top and bottom of the text by finding which rows are entirely full of transparent pixels.\n    // The difference between the top-most transparent row and the bottom-most transparent row is the text height.    \n    var iterator = new Iterator(parameters.width, parameters.height);\n    var foundTopText = false;\n    var foundBottomText = false;\n    var topTextY = null;\n    var bottomTextY = null;\n    var allPixelsInThisRowAreWhite;\n    while (!iterator.noMorePixels()) {\n      if (!foundTopText) {\n        // We have only encounted rows that are totally white so far, as soon as we \n        // find a pixel that is not white we will count that as the top of the text\n        if (isTransparent(parameters.imageData, iterator.index)) {\n          iterator.moveRight();\n        } else {\n          topTextY = iterator.y;\n          foundTopText = true;\n          iterator.moveDown();\n        }\n      } else {\n        // We are looping through the rows until we find a row which is all white, \n        // in which case we have reached the bottom of the text\n        if (!iterator.arePixelsToTheRight()) {\n          if (allPixelsInThisRowAreWhite) {\n            bottomTextY = iterator.y;\n            foundBottomText = true;\n            break;\n          }  \n          allPixelsInThisRowAreWhite = true;\n          iterator.moveDown();\n        }\n        if (!isTransparent(parameters.imageData, iterator.index)) {\n          allPixelsInThisRowAreWhite = false;\n          iterator.moveDown();\n        } else {\n          iterator.moveRight();\n        }\n      }\n    }\n    \n    return { foundTopText: foundTopText, foundBottomText: foundBottomText, topTextY: topTextY, bottomTextY: bottomTextY };\n  }\n  \n  function isTransparent(imageData, index) {\n    return imageData.data[index + 3] === 0; // If there is zero alpha then it is transparent\n  }\n  \n  function getComputedStyle(element, property) {\n    return element ? window.getComputedStyle(element)[property] : null ;\n  }\n","function scaleImageData({ctx, imageData,  amplitude, curve}) {\r\n  const halfWidth = imageData.width * 0.5 || ctx.width / 2;\r\n  const orientation = amplitude < 0 ? -1 : 0;\r\n  var scaled = ctx.createImageData(imageData.width, imageData.height + Math.abs(amplitude));\r\n  for(var row = 0; row < imageData.height; row++) {\r\n    for(var col = 0; col < imageData.width; col++) {\r\n      var sourcePixel = [\r\n        imageData.data[(row * imageData.width + col) * 4 + 0],\r\n        imageData.data[(row * imageData.width + col) * 4 + 1],\r\n        imageData.data[(row * imageData.width + col) * 4 + 2],\r\n        imageData.data[(row * imageData.width + col) * 4 + 3]\r\n      ];\r\n      var delta = (col - halfWidth) / halfWidth;\r\n      const dy = Math.round(amplitude * curve(delta) ) + orientation * amplitude;\r\n      var destRow = row + dy;\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 0] = sourcePixel[0];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 1] = sourcePixel[1];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 2] = sourcePixel[2];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 3] = sourcePixel[3];\r\n    }\r\n  }\r\n\r\n  return scaled;\r\n}\r\n\r\nexport default scaleImageData","import textMeasurer from '../utils/textmeasurer'\r\nimport scaleImageData from '../utils/scaleImageData'\r\n\r\nexport default function(\r\n  {\r\n    ctx,\r\n    tCtx,\r\n    text = '1234567890abcdefghihklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n    fontSize = 80,\r\n    fontFamily = 'AtomicAge',\r\n    width = 3400,\r\n    offsetTop = 50,\r\n    distortion = 0,\r\n    lineWidth = 3,\r\n    fillStyle = '#4444f1',\r\n    strokeStyle = '#4444f1',\r\n\r\n    designedSize = {\r\n      width: 3600,\r\n      height: 3600\r\n    }\r\n  }\r\n) {\r\n\r\n  const {\r\n    width: designedWidth,\r\n    height: designedHeight } = designedSize;\r\n  const { width: ctxWidth, height: ctxHeight } = ctx.canvas;\r\n  // const { width: tCtxWidth, height: tCtxHeight } = tCtx.canvas;\r\n  const XFactor = ctxWidth / designedWidth;\r\n  const YFactor = ctxHeight / designedHeight;\r\n  const leftPadding = (designedWidth - width) * XFactor / 2;\r\n\r\n  // ctx.fillStyle = 'rgba(10,0,0, 0.05)';\r\n  // ctx.fillRect(0,0, ctxWidth, ctxHeight);\r\n\r\n  /* detect scale factor to fit short text into box width */\r\n  const {width: textWidth, height: textHeight, yOffset} = textMeasurer({\r\n    text,\r\n    fontSize: `${YFactor * fontSize}px`,\r\n    fontFamily\r\n  });\r\n  const scaleFActor = ( XFactor * width / textWidth > 1 ) ? XFactor * width / textWidth : 1;\r\n  console.log('fontFamily=', fontFamily, 'fontSize=', fontSize, 'yOffset=', yOffset);\r\n  // const scale_Y_FActor = ( YFactor * fontSize / textHeight > 1 ) ? YFactor * fontSize / textHeight : 1;\r\n  // const renderFontSize = YFactor * fontSize * scaleFActor;\r\n  // console.log( 'scale_Y_FActor =', scale_Y_FActor, 'scaleFActor =', scaleFActor);\r\n  // console.log( XFactor * width / scaleFActor, textHeight, ' textWidth = ', textWidth, scaleFActor, 'renderFontSize =', renderFontSize);\r\n\r\n  const coord = {\r\n    x0: 0 + 3,\r\n    y0: 0 + 3,\r\n    x: textWidth + 6,\r\n    y: textHeight + 6,\r\n  };\r\n\r\n  // tCtx.textBaseline = 'bottom';\r\n  tCtx.strokeStyle = strokeStyle;\r\n  tCtx.fillStyle = fillStyle;\r\n  tCtx.lineWidth = lineWidth;\r\n\r\n  /****** DRAW BOUNDARY OF THE TEXT ******/\r\n  // tCtx.rect(coord.x0, coord.y0,  width * XFactor / scaleFActor + 3, textHeight + 3);\r\n\r\n  tCtx.stroke();\r\n  tCtx.textAlign = 'left';\r\n  tCtx.font=`${ YFactor * fontSize }px ${fontFamily}`;\r\n\r\n  // console.log(text, ' coord.x =',  coord.x, 'textHeight =', textHeight, ' font =', YFactor * fontSize * scaleFActor, ' YFactor=', YFactor, 'scaleFActor=', scaleFActor);\r\n\r\n  tCtx.fillText(text, coord.x0, (textHeight + 3), XFactor * width);\r\n  tCtx.strokeText(text, coord.x0, (textHeight + 3), XFactor * width);\r\n\r\n  const amplitude = distortion * YFactor;\r\n\r\n  if (distortion !== 0 ) {\r\n    const imageData = tCtx.getImageData(coord.x0-3, coord.y0-3, XFactor * width / scaleFActor+6+3+3, textHeight+6+3 + 3 );\r\n    const scaledImageData = scaleImageData({ctx: tCtx, imageData, amplitude, curve: x => x * x});\r\n    tCtx.putImageData(scaledImageData, coord.x0-3, coord.y0-3);\r\n  }\r\n\r\n  const img = new Image();\r\n  img.src = tCtx.canvas.toDataURL();\r\n  tCtx.clearRect(0, 0, tCtx.canvas.width, tCtx.canvas.height);\r\n\r\n  return new Promise(resolve => {\r\n    img.onload = function (){\r\n      ctx.drawImage(img,\r\n        0, 0,\r\n        width * XFactor / scaleFActor + 6 + 3, textHeight + 6 + 3 + 2 * Math.abs(amplitude),\r\n        leftPadding, offsetTop * YFactor,\r\n        width * XFactor, textHeight + 2 * Math.abs(amplitude)\r\n      );\r\n      resolve('drown')\r\n    };\r\n  });\r\n\r\n}\r\n\r\n","import mascots from './../assets/logos'\r\n\r\nexport default function (\r\n  {\r\n    ctx,\r\n    id = 'elephant'\r\n  }\r\n) {\r\n  const img = new Image(ctx.canvas.width, ctx.canvas.height);\r\n  img.src = mascots[id];\r\n\r\n  return new Promise(resolve => {\r\n    img.onload = function (){\r\n      ctx.drawImage(img, 0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      resolve('drown')\r\n    };\r\n  });\r\n}","import DrawText from './drawTextV2'\r\nimport DrawImage from './drawImage'\r\n\r\nexport default async function (ctx, tCtx, props) {\r\n  const { fontFamily } = props;\r\n\r\n  ctx.fillStyle = '#fff';\r\n  ctx.save();\r\n\r\n  await DrawText(\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      ...props.texts[0],\r\n    }\r\n  );\r\n\r\n  /* draw outlined BOTTOM text*/\r\n  await outlined(DrawText,\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      ...props.texts[1],\r\n      outline1: {color: '#f00', lineWidth: 26 } ,\r\n      outline2: {color: '#ff0', lineWidth: 26 },\r\n    }\r\n  );\r\n\r\n  await DrawImage({\r\n    ctx,\r\n    id: props.mascot\r\n  });\r\n\r\n  /* draw BOTTOM text*/\r\n  await DrawText(\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      ...props.texts[1],\r\n    }\r\n  );\r\n\r\n  return new Promise(resolve => {\r\n    ctx.restore();\r\n    resolve('all are drown')\r\n  });\r\n}\r\n\r\nfunction outlined(wrappedComp, props) {\r\n  const {\r\n    outline1: {\r\n      color: fillStyle = '#f00',\r\n      lineWidth: lineWidthInside\r\n    } ,\r\n    outline2: {\r\n      color: strokeStyle = '#00f',\r\n      lineWidth: lineWidthOuter\r\n    },\r\n\r\n    distortion,\r\n    fontSize,\r\n    offsetTop,\r\n    width,\r\n  } = props;\r\n\r\n  const newFontSize = fontSize + lineWidthInside + lineWidthOuter;\r\n  const newOffsetTop = offsetTop - lineWidthInside - lineWidthOuter;\r\n  const newWidth = width + 2 * lineWidthInside + 2 * lineWidthOuter;\r\n  const newDistortion = distortion - lineWidthInside - lineWidthOuter;\r\n\r\n  const newProps = {\r\n    ...props,\r\n    fillStyle,\r\n    strokeStyle,\r\n    fontSize: newFontSize,\r\n    lineWidth: lineWidthOuter,\r\n    offsetTop: newOffsetTop,\r\n    width: newWidth\r\n  };\r\n\r\n  return wrappedComp(newProps)\r\n}","import { useState, useEffect, useRef } from 'react'\r\nimport { saveAs } from 'file-saver';\r\nimport { HQSize, LQSize } from './../constants/initSettings';\r\nimport draw from './drawingSequence'\r\n\r\nexport function usePersistentState(init) {\r\n  const [props, setProps] = useState({\r\n      ...JSON.parse(localStorage.getItem('draw-app')),  ...init\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('draw-app', JSON.stringify(props))\r\n  });\r\n  return [props, setProps]\r\n}\r\n\r\nexport function usePersistentCanvas(initialProps) {\r\n  const [props, setProps] = usePersistentState(initialProps);\r\n  const canvasRef = useRef(null);\r\n  const textCanvasREf = useRef(null);\r\n\r\n  const saveCanvasToFile = (fileName) => {\r\n    const canvas = canvasRef.current;\r\n    canvas.toBlob(function(blob) {\r\n      saveAs(blob, fileName);\r\n    });\r\n  };\r\n\r\n  async function drawing (ctx, tCtx, props) {\r\n    // console.log('drawing props =', props);\r\n\r\n    await draw(ctx, tCtx, props);\r\n    if (props.saveLQ || props.saveHQ) {\r\n      saveCanvasToFile(`export_LQ_${Date.now()}.png`);\r\n      setProps({\r\n        ...props,\r\n        saveLQ: false,\r\n        saveHQ: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect( () => {\r\n    const canvas = canvasRef.current;\r\n    const textCanvas = textCanvasREf.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const tCtx = textCanvas.getContext('2d');\r\n\r\n    const canvasResolution = props.saveHQ\r\n       ? { ...HQSize } // set HQ resolution for render for capture the image\r\n       : props.canva;\r\n\r\n    canvas.setAttribute('width', canvasResolution.width);\r\n    canvas.setAttribute('height', canvasResolution.height);\r\n    textCanvas.setAttribute('width', canvasResolution.width);\r\n    textCanvas.setAttribute('height', canvasResolution.height);\r\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n    drawing(ctx, tCtx, props)\r\n  });\r\n\r\n  return [props, setProps, canvasRef, textCanvasREf]\r\n}\r\n","import React, {Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { SidePanel, MascotsPanel, Header } from './../'\r\nimport { usePersistentCanvas } from './../../canvas'\r\nimport styles from './Index.module.scss'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction MainLayout({HQSize, initialProps}) {\r\n  const [props, setProps, canvasRef, textCanvasREf] = usePersistentCanvas({...initialProps});\r\n\r\n  function eventHandler(e) {\r\n    // console.log('eventHandler', e);\r\n    setProps({...props, ...e })\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <Grid container spacing={3} className={classes.root}>\r\n\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>\r\n            <SidePanel eventHandler={eventHandler} props={props}/>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={5}>\r\n          <div className={styles.canvaContainer}>\r\n            <canvas\r\n              id='THEMAINCANVAS'\r\n              className={styles.canvases}\r\n              ref={canvasRef}\r\n            />\r\n          </div>\r\n          <Grid container justify = \"center\">\r\n            <ButtonGroup variant=\"contained\" aria-label=\"small contained button group\">\r\n              <Button\r\n                onClick = { () => { setProps({...props, saveLQ: true }) }}\r\n              >Save as low-quality PNG (72 DPI)</Button>\r\n              <Button\r\n                onClick = { () => {setProps({...props, saveHQ: true, ...HQSize }) }}\r\n              >Save as high-quality PNG (300 DPI)</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={4}>\r\n          <MascotsPanel eventHandler={eventHandler}/>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <canvas\r\n        className={classNames(styles.serviceCanvas, styles.canvases)}\r\n        ref={textCanvasREf}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default MainLayout\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nconst MenuIcon  = (props) => (\r\n  <SvgIcon {...props}>\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\r\n  </SvgIcon>\r\n);\r\n\r\nconst AccountCircle = (props) => (\r\n  <SvgIcon {...props}>\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"/>\r\n  </SvgIcon>\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\"  style={{ background: 'transparent', boxShadow: 'none'}}>\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon color=\"primary\"/>\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title} color=\"primary\">\r\n          Create your style\r\n        </Typography>\r\n        <div>\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle color=\"primary\"/>\r\n          </IconButton>\r\n\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}","import React, {Fragment, useEffect, useState} from 'react';\r\nimport { MainLayout } from './UI/'\r\nimport {HQSize, initialProps} from './constants/initSettings';\r\nimport './Index.module.scss'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  const content = isMounted\r\n      ? <MainLayout\r\n        HQSize={HQSize}\r\n        {...initialProps}\r\n      />\r\n    : <span style={{fontFamily: 'Arvo'}}>Loading...</span>;\r\n\r\n  useEffect(() => {\r\n    console.log('mounted');\r\n    setIsMounted(true)\r\n  } , []);\r\n\r\n  return (<Fragment>\r\n      {content}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvases\":\"Index_canvases__3cujD\",\"canvaContainer\":\"Index_canvaContainer__xHRDS\",\"serviceCanvas\":\"Index_serviceCanvas__B4yWI\"};"],"sourceRoot":""}