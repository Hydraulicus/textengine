{"version":3,"sources":["assets/logos/fullSize/elephant.svg","assets/logos/fullSize/horse.svg","assets/logos/fullSize/react.svg","assets/logos/fullSize/rooster.svg","assets/logos/fullSize/ninja.svg","assets/logos/index.js","UI/panel/mascotsPanel.js","assets/templates/index.js","UI/panel/templatesPanel.js","assets/index.js","UI/panel/sidePanel.js","utils/loadFile.js","utils/index.js","functionality/templating/loadTemplate.js","functionality/templating/parseTemplate.js","functionality/applayTemplate.js","constants/initSettings.js","utils/textmeasurer.js","utils/scaleImageData.js","canvas/drawTextV2.js","canvas/drawImage.js","canvas/outlined.js","canvas/drawImageOutline.js","canvas/drawingSequence.js","canvas/index.js","functionality/appLauncher.js","UI/mainLayout/mainLayout.js","UI/header/header.js","App.js","serviceWorker.js","index.js","assets/templates/SVG/master.svg","UI/mainLayout/Index.module.scss"],"names":["module","exports","__webpack_require__","p","logos","elephant","_elephant","horse","_horse","react","_react","rooster","_rooster","ninja","_ninja","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","backgroundColor","palette","background","paper","cursor","textTransform","width","gridListTile","info","fontSize","mascotImg","height","border","borderRadius","title","tileData","img","mascots","author","mascotsPanel","_ref","eventHandler","classes","react_default","a","createElement","className","Typography","variant","color","GridList","cellHeight","spacing","cols","map","tile","GridListTile","key","src","alt","onClick","e","id","target","templates","template0","JSONname","_template0","template1","template2","template3","template4","templatesPanel","template","fonts","value","label","padding","margin","container","textField","marginLeft","marginRight","colorPicker","dense","marginTop","menu","sidePanel","name","props","texts","outline","handleChangeTextsProp","idx","event","length","toUpperCase","newTexts","Object","objectSpread","defineProperty","handleChangeTextsColorsProp","checkBox","textItem","Checkbox","checked","visible","inputProps","aria-label","style","fontFamily","Paper","TextField","concat","text","defaultValue","onChange","classNames","InputProps","startAdornment","InputAdornment","position","select","SelectProps","native","MenuProps","helperText","option","Grid","justify","item","xs","lib_default","strokeStyle","fillStyle","show","newOutline","handleChangeOutlineProp","getJSONfile","_x","_x2","_getJSONfile","apply","this","arguments","_callee","JSONS","JSONSVG","regenerator_default","wrap","_context","prev","next","abrupt","stop","deepFind","JSONArray","keyPath","keyValue","_","find","matchesProperty","loadTemplate","asyncToGenerator","mark","templatesCollection","curTemplate","keyBy","sent","console","log","getPropValues","o","prop","res","JSON","stringify","push","parseTemplate","JSONTemplate","viewBox","attributes","children","reduceRight","test","_props$texts","childrens","initProps","addedProps","reduce","_item$attributes","offsetTop","y","replace","lineWidth","distortion","deconstructTextTree","_deconstructMascotTre","_childrens$attributes","deconstructMascotTree","_viewBox$split","split","_viewBox$split2","slicedToArray","_viewBox$split2$","_viewBox$split2$2","designedSize","applayTemplate","initialProps","parsedTemplate","defaultsDeep","HQSize","LQSize","saveHQ","saveLQ","canva","measureBoundingRect","font","temporaryContainer","document","top","left","temporaryElement","innerText","body","appendChild","bBox","getBoundingClientRect","removeChild","Iterator","maxWidth","maxHeight","x","index","moveRight","arePixelsToTheRight","moveDown","noMorePixels","measure","parameters","allPixelsInThisRowAreWhite","iterator","foundTopText","foundBottomText","topTextY","bottomTextY","isTransparent","imageData","data","getComputedStyle","element","property","window","scaleImageData","ctx","amplitude","curve","halfWidth","orientation","scaled","createImageData","Math","abs","row","col","sourcePixel","delta","destRow","round","drawTextV2","tCtx","_ref$text","_ref$fontSize","_ref$fontFamily","_ref$width","_ref$offsetTop","_ref$distortion","_ref$lineWidth","_ref$fillStyle","_ref$strokeStyle","_ref$designedSize","designedWidth","designedHeight","_ctx$canvas","canvas","ctxWidth","ctxHeight","XFactor","YFactor","OFactor","sqrt","_textMeasurer","options","fontWeight","boundingRect","context","getContext","fillText","getImageData","result","yOffset","textMeasurer","textWidth","textHeight","scaleFActor","leftPadding","relativeSize","w","h","coord","x0","y0","textAlign","strokeText","scaledImageData","putImageData","Image","toDataURL","clearRect","Promise","resolve","onload","drawImage","_ref$mascots","outlined","wrappedComp","_props$outline","_props$outline$color","_props$outline$lineWi","textLineWidth","newLineWidth","newOffsetTop","drawImageOutline","_ref2","_ref$outline","_ref$outline$color","_ref$outline$lineWidt","_ref$mascots$id","JSONSVGImage","outLineViewBox","outlineTag","outLineD","outLineStrokeWidth","strokeWidth","outlineXML","svg64","d","btoa","drawingSequence","_x3","drawingSequence_ref","outlineShow","t0","Outlined","DrawText","t1","t2","DrawImageOutline","DrawImage","usePersistentCanvas","setProps","objectWithoutProperties","canvasRef","useRef","textCanvasREf","saveCanvasToFile","fileName","current","toBlob","blob","saveAs","_drawing","draw","Date","now","useEffect","textCanvas","canvasResolution","setAttribute","innerWidth","innerHeight","redrawCanvas","drawing","flexGrow","secondary","appLauncher","component","_usePersistentCanvas","_usePersistentCanvas2","then","Header","styles","canvaContainer","canvases","ref","ButtonGroup","Button","serviceCanvas","MenuIcon","SvgIcon","fill","AccountCircle","menuButton","AppBar","boxShadow","Toolbar","IconButton","edge","header_MenuIcon","aria-controls","aria-haspopup","header_AccountCircle","App","_useState","useState","_useState2","isMounted","setIsMounted","_useState3","_useState4","content","mainLayout","assign","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24d52813.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/elephant.217a2486.svg\";","module.exports = __webpack_public_path__ + \"static/media/horse.125f0807.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.123a7b03.svg\";","module.exports = __webpack_public_path__ + \"static/media/rooster.531601d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/ninja.d27ef945.svg\";","import elephant from './fullSize/elephant.svg';\r\nimport _elephant from './JSONS/_elephant.json';\r\n\r\nimport horse from './fullSize/horse.svg';\r\nimport _horse from './JSONS/_horse.json';\r\n\r\nimport react from './fullSize/react.svg';\r\nimport _react from './JSONS/_react.json';\r\n\r\nimport rooster from './fullSize/rooster.svg';\r\nimport _rooster from './JSONS/_rooster.json';\r\n\r\nimport ninja from './fullSize/ninja.svg';\r\nimport _ninja from './JSONS/_ninja.json';\r\n\r\nexport default  {\r\n  elephant, _elephant,\r\n  horse, _horse,\r\n  react, _react,\r\n  rooster, _rooster,\r\n  ninja, _ninja,\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport mascots from './../../assets/logos'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    // backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    cursor: 'pointer',\r\n    textTransform: 'capitalize',\r\n    width: 450,\r\n    // height: 450,\r\n    // padding: '50px 30px',\r\n  },\r\n  gridListTile: {\r\n    // marginTop: '10px',\r\n  },\r\n  info: {\r\n    fontSize: '0.5rem'\r\n  },\r\n  mascotImg: {\r\n    height: '120px',\r\n    width: '120px',\r\n    border: '#555 1px solid',\r\n    borderRadius: '5px',\r\n  },\r\n  title: {\r\n  }\r\n}));\r\n\r\nconst tileData = [\r\n       {\r\n           img: mascots.elephant,\r\n           title: 'elephant',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.horse,\r\n           title: 'horse',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.rooster,\r\n           title: 'rooster',\r\n           author: 'Nature',\r\n         },\r\n       {\r\n           img: mascots.react,\r\n           title: 'react',\r\n           author: 'Facebook',\r\n         },\r\n       {\r\n           img: mascots.ninja,\r\n           title: 'ninja',\r\n           author: 'Historic',\r\n         },\r\n];\r\n\r\n\r\nexport default function ({eventHandler}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Typography variant=\"h6\" className={classes.title} color=\"primary\">\r\n        Please select image\r\n      </Typography>\r\n\r\n      <GridList cellHeight={150} spacing={3} cols={3} className={classes.gridList} >\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.img} className={classes.gridListTile}>\r\n            <img\r\n              className={classes.mascotImg}\r\n              src={tile.img}\r\n              alt={tile.title}\r\n              onClick={ e => {\r\n                eventHandler(\r\n                  {\r\n                    mascots: {id: e.target.alt}\r\n                  }\r\n                  )\r\n              } }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}","import template0 from './SVG/master.svg';\r\nimport _template0 from './JSONS/_master.json';\r\n\r\nexport default  [\r\n  { title: 'template0', id: 'template0', img: template0, JSONname: '_template0', template0: _template0 },\r\n  { title: 'template1', id: 'template1', img: template0, JSONname: '_template1', template1: _template0 },\r\n  { title: 'template2', id: 'template2', img: template0, JSONname: '_template2', template2: _template0 },\r\n  { title: 'template3', id: 'template3', img: template0, JSONname: '_template3', template3: _template0 },\r\n  { title: 'template4', id: 'template4', img: template0, JSONname: '_template4', template4: _template0 },\r\n]","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport templates from './../../assets/templates'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n  },\r\n  gridList: {\r\n    cursor: 'pointer',\r\n    textTransform: 'capitalize',\r\n    width: 450,\r\n    // height: 450,\r\n    // padding: '50px 30px',\r\n  },\r\n  gridListTile: {\r\n  },\r\n  info: {\r\n    fontSize: '0.5rem'\r\n  },\r\n  mascotImg: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: '120px',\r\n    width: '120px',\r\n    border: '#555 1px solid',\r\n    borderRadius: '5px',\r\n  }\r\n}));\r\n\r\n// const tileData = [\r\n//        {\r\n//            img: mascots.elephant,\r\n//          },\r\n//\r\n// ];\r\n\r\n\r\nexport default function ({eventHandler}) {\r\n  const classes = useStyles();\r\n\r\n// console.log('templates =',templates)\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Typography variant=\"h6\" className={classes.title} color=\"primary\">\r\n        Please select template\r\n      </Typography>\r\n\r\n      <GridList cellHeight={150} spacing={3} cols={3} className={classes.gridList} >\r\n        {templates.map(tile => (\r\n          <GridListTile key={tile.id} className={classes.gridListTile}>\r\n            <img\r\n              className={classes.mascotImg}\r\n              src={tile.img}\r\n              alt={tile.id}\r\n              onClick={ e => {\r\n                eventHandler(\r\n                  {\r\n                    template: {id: e.target.alt}\r\n                  }\r\n                  )\r\n              } }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}","import logos from './logos'\r\nimport icons from './icons'\r\n\r\nconst fonts = [\r\n  {\r\n    value: 'Arvo-Bold',\r\n    label: 'Arvo-Bold',\r\n  },\r\n  {\r\n    value: 'AtomicAge',\r\n    label: 'AtomicAge',\r\n  },\r\n  {\r\n    value: 'Bahiana',\r\n    label: 'Bahiana',\r\n  },\r\n  {\r\n    value: 'BerkshireSwash',\r\n    label: 'BerkshireSwash',\r\n  },\r\n  {\r\n    value: 'BlendaScript',\r\n    label: 'BlendaScript',\r\n  },\r\n  {\r\n    value: 'LilitaOne',\r\n    label: 'LilitaOne',\r\n  },\r\n  {\r\n    value: 'GrandHotel',\r\n    label: 'GrandHotel',\r\n  },\r\n  {\r\n    value: 'MedulaOne',\r\n    label: 'MedulaOne',\r\n  },\r\n  {\r\n    value: 'PirataOne',\r\n    label: 'PirataOne',\r\n  },\r\n  {\r\n    value: 'Teko',\r\n    label: 'Teko',\r\n  },\r\n];\r\nexport {fonts, logos, icons}","import React, {Fragment} from 'react';\r\nimport classNames from 'classnames';\r\nimport ColorPicker from 'material-ui-color-picker';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {fonts} from './../../assets'\r\n\r\nconst maxStringSize = 30;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1, 2),\r\n    margin: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    // width: '12rem',\r\n    // fontFamily: 'AtomicAge'\r\n  },\r\n  colorPicker: {\r\n    backgroundColor: 'red'\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function ({eventHandler, props}) {\r\n  const {\r\n    texts,\r\n    outline,\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  const handleChangeTextsProp = (idx, name) => event => {\r\n    let { value } = event.target;\r\n\r\n    if ( name === 'text' &&  value.length > maxStringSize) return;\r\n    if ( name === 'text' ) value = value.toUpperCase();\r\n\r\n    const newTexts = texts;\r\n    newTexts[idx] =  {\r\n      ...texts[idx],\r\n      [name]: value,\r\n    };\r\n    eventHandler({\r\n      texts: newTexts\r\n    });\r\n  };\r\n\r\n  const handleChangeTextsColorsProp = (idx, name) => color => {\r\n    const newTexts = texts;\r\n    newTexts[idx] =  {\r\n      ...texts[idx],\r\n      [name]: color,\r\n    };\r\n    eventHandler({\r\n      texts: newTexts\r\n    });\r\n  };\r\n\r\n  const handleChangeOutlineProp = name => color => {\r\n    const newOutline = {\r\n      ...outline,\r\n      [name]: color\r\n    };\r\n    eventHandler({\r\n      outline: newOutline\r\n    });\r\n  };\r\n\r\n  const handleCheckBoxChange = name => event => {\r\n    let { checked } = event.target;\r\n\r\n    const newOutline = {\r\n      ...outline,\r\n      [name]: checked\r\n    };\r\n\r\n    eventHandler({\r\n      outline: newOutline\r\n    });\r\n  };\r\n\r\n  const checkBox = (textItem) => {\r\n    return <Checkbox\r\n    color='default'\r\n    checked={textItem.visible}\r\n    inputProps={{\r\n      'aria-label': 'checkbox with default color',\r\n    }}\r\n  />};\r\n\r\n  return <Fragment>\r\n    <h3 style={{fontFamily: props.fontFamily}} >Please select options</h3>\r\n    { texts.map( (textItem, idx) => <Paper className={classes.root} key={textItem.id}>\r\n        <TextField\r\n          id={textItem.id}\r\n          label={`${textItem.label} ${textItem.text.length} / ${maxStringSize}`}\r\n          defaultValue={textItem.text}\r\n          onChange={handleChangeTextsProp(idx, 'text')}\r\n          className={classNames(classes.textField, classes.dense)}\r\n          variant='outlined'\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position='start'>{checkBox(textItem)}</InputAdornment>,\r\n          }}\r\n        />\r\n        <TextField\r\n          id='standard-select-currency-native'\r\n          select\r\n          variant='outlined'\r\n\r\n          label='Select font'\r\n          className={classNames(classes.margin, classes.textField)}\r\n          value={textItem.fontFamily}\r\n          onChange={handleChangeTextsProp(idx, 'fontFamily')}\r\n          SelectProps={{\r\n            native: true,\r\n            MenuProps: {\r\n              className: classes.menu,\r\n            },\r\n          }}\r\n          helperText='Please select font'\r\n          margin='normal'\r\n        >\r\n          {fonts.map(option => (\r\n            <option key={option.value} value={option.value} style={{fontFamily: option.value}}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField>\r\n\r\n        <Grid container justify='center' spacing={3}>\r\n          <Grid item xs={5}>\r\n            <ColorPicker\r\n              name='color'\r\n              label={`strokeStyle`}\r\n              value={textItem.strokeStyle}\r\n              onChange={handleChangeTextsColorsProp(idx, 'strokeStyle')}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <ColorPicker\r\n              name='color'\r\n              label={`filling`}\r\n              value={textItem.fillStyle}\r\n              onChange={handleChangeTextsColorsProp(idx, 'fillStyle')}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    )\r\n    }\r\n\r\n    <h3>Please define outline props</h3>\r\n\r\n    <Grid container justify='center' spacing={3}>\r\n      <Grid item xs={2}>\r\n        <Checkbox\r\n          color='default'\r\n          checked={outline.show}\r\n          onChange={handleCheckBoxChange('show')}\r\n          value={outline.show}\r\n          inputProps={{ 'aria-label': 'show' }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <ColorPicker\r\n          name='outlineColor'\r\n          label={`color`}\r\n          value={outline.color}\r\n          onChange={handleChangeOutlineProp('color')}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  </Fragment>\r\n\r\n}\r\n\r\n","const request = (options) => {\r\n  const headers = new Headers({\r\n  });\r\n\r\n  const defaults = {headers};\r\n  // eslint-disable-next-line no-param-reassign\r\n  options = Object.assign({}, defaults, options);\r\n  return fetch(options.url, options)\r\n    .then(response =>\r\n      response.text().then(text => {\r\n        if(!response.ok) {\r\n          return Promise.reject(text);\r\n        }\r\n        return text;\r\n      })\r\n    );\r\n};\r\n\r\nexport function getSVGImage(fileName) {\r\n  return request({\r\n    url: fileName,\r\n    method: 'GET',\r\n  });\r\n}\r\n\r\nexport function getJSONSVGImage(fileName) {\r\n  let options = {\r\n    url: fileName,\r\n    method: 'GET',\r\n  };\r\n\r\n  const headers = new Headers({\r\n    'Content-Type': 'application/json',\r\n  });\r\n\r\n  const defaults = {headers};\r\n  // eslint-disable-next-line no-param-reassign\r\n  options = Object.assign({}, defaults, options);\r\n  return fetch(process.env.PUBLIC_URL +options.url, options)\r\n    .then(response =>\r\n      response.json().then(json => {\r\n        // console.log(response);\r\n        if(!response.ok) {\r\n          console.log('reject')\r\n          return Promise.reject(json);\r\n        }\r\n        return json;\r\n      })\r\n    );\r\n}\r\n\r\nexport async function getJSONfile(id, JSONS) {\r\n  /* Loading JSON from external file*/\r\n  // const JSONSVG = await getJSONSVGImage(`/JSONS/_${id}.json`);\r\n  //\r\n  const JSONSVG = JSONS[`_${id}`];\r\n  // console.log(JSONSVG);\r\n  return JSONSVG\r\n}","import _ from 'lodash';\r\nimport {getJSONfile} from './loadFile';\r\n\r\nconst deepFind = (JSONArray, keyPath, keyValue) => _.find(\r\n  JSONArray, _.matchesProperty(keyPath, keyValue)\r\n);\r\n\r\nexport {\r\n  getJSONfile,\r\n  deepFind\r\n}","import _  from 'lodash'\r\nimport {getJSONfile} from '../../utils/index'\r\n\r\nexport default async (id, JSONS) => {\r\n\r\n  const templatesCollection = _.keyBy(JSONS, 'JSONname');\r\n  // debugger\r\n  const curTemplate = await getJSONfile(id, templatesCollection);\r\nconsole.log(id, 'curTemplate =', curTemplate, curTemplate[id]);\r\n  return curTemplate[id]\r\n\r\n}","import { deepFind } from '../../utils/index'\r\n\r\nconst getPropValues = (o, prop) =>\r\n  (res => (JSON.stringify(o, (key, value) =>\r\n    (key === prop && res.push(value), value)), res))([]);\r\n\r\nconst deconstructTextTree = (childrens, initProps) => {\r\n  console.log('============== deconstructTextTree =====================');\r\n  // console.log(JSON.stringify(childrens, null, 2));\r\n  // console.log('childrens=', childrens);\r\n\r\n  // const filtered = JSON.parse(JSON.stringify(childrens, ['children', 'attributes', 'id', 'name', 'fill', 'stroke', 'stroke-width', 'font-family', 'font-size', 'transform', 'width', 'y'], 2));\r\n  // console.log('filtered = ', JSON.stringify(filtered, 'none', 2));\r\n  // console.log('flattenObject = ', flattenObject(filtered));\r\n\r\n  const addedProps = childrens.reduce(\r\n    // const addedProps = filtered.reduce(\r\n    (props, item, idx) => {\r\n      switch (true) {\r\n\r\n        case (/BORDERS/.test(item.attributes.id)) : {\r\n          /* getting size and place of text */\r\n          const {\r\n            width,\r\n            y: offsetTop\r\n          } = item.attributes;\r\n          return {\r\n            ...props,\r\n            ...(width && {width}), // if width is defined\r\n            ...(offsetTop && {offsetTop}),\r\n          }\r\n        }\r\n\r\n        case (/CONTENT/.test(item.attributes.id)) : {\r\n          /* getting text options */\r\n          // console.log(idx, 'CONTENT item', item);\r\n\r\n          let fontFamily = getPropValues(item, \"font-family\")[0];\r\n\r\n          fontFamily = fontFamily && fontFamily.replace(/[^a-zA-Z-]+/g, ''); /* extract letters and - */\r\n          // fontFamily = fontFamily && fontFamily.replace(/[^w-]+/gi, ''); /* extract any single alphanumeric character or underscore and - */\r\n\r\n          let fontSize = getPropValues(item, \"font-size\")[0];\r\n          fontSize = fontSize && fontSize.replace(/[^\\d.,]+/g, ''); /* extract digits only */\r\n\r\n          let lineWidth = getPropValues(item, \"stroke-width\")[0] || 0;\r\n          lineWidth = lineWidth && +lineWidth; /* make it numerical */\r\n\r\n          const fillStyle = getPropValues(item, \"fill\")[0];\r\n          const strokeStyle = getPropValues(item, \"stroke\")[0];\r\n\r\n          return {\r\n            ...props,\r\n            ...(fontFamily && {fontFamily}), // if fontFamily is defined\r\n            ...(fontSize && {fontSize}),\r\n            // ...(lineWidth && {lineWidth}),\r\n            lineWidth,\r\n            ...(fillStyle && {fillStyle}),\r\n            ...(strokeStyle && {strokeStyle}),\r\n          }\r\n        }\r\n\r\n        case (/ARCBENDING/.test(item.attributes.id)) : {\r\n          /* getting text bending options */\r\n          console.log(idx, 'ARCBENDING item', item);\r\n          let distortion = getPropValues(item, \"height\")[0];\r\n          distortion = distortion && +distortion; /* make it numerical */\r\n          return {\r\n            ...props,\r\n            ...(distortion && {distortion}), // if distortion is defined\r\n          }\r\n        }\r\n\r\n        default: {\r\n          return {...props}\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n    ,initProps\r\n  );\r\n\r\n  return {\r\n    ...initProps,\r\n    // distortion: 0,\r\n    ...addedProps\r\n  }\r\n};\r\n\r\nconst deconstructMascotTree = (childrens, initProps) => {\r\n  // console.log('============== deconstructMascotTree =====================');\r\n  // console.log(JSON.stringify(childrens, null, 2));\r\n  const { attributes: {y, width, height} } = childrens;\r\n  return {\r\n    ...initProps,\r\n    offsetTop: y,\r\n    width,\r\n    height\r\n  }\r\n}\r\n\r\nexport default JSONTemplate => {\r\n\r\n  const {attributes: {viewBox}, children} = JSONTemplate;\r\n  const templateStructure = deepFind(children, ['attributes','id'], \"TEMPLATE\") || [];\r\n\r\n\r\n  const props = templateStructure.children.reduceRight(\r\n    (props, item) => {\r\n      // console.log( item, item.attributes.id, /TEXT/.test(item.attributes.id));\r\n\r\n      switch (true) {\r\n        case (/TEXT/.test(item.attributes.id)) : {\r\n          const {texts = []} = props;\r\n          texts.push(deconstructTextTree(item.children, {}));\r\n          // console.log('return ', { ...props, texts}, texts);\r\n\r\n          return { ...props, texts}\r\n\r\n        }\r\n        case (/MASCOTAREA/.test(item.attributes.id)) : {\r\n          const {mascots = {}} = props;\r\n          const { offsetTop, width, height } = (deconstructMascotTree(item, {}))\r\n          return {\r\n            ...props,\r\n            mascots: {\r\n              ...(offsetTop && {offsetTop}), // if distortion is defined\r\n              ...(width && {width}), // if distortion is defined\r\n              ...(height && {height}), // if distortion is defined\r\n            },\r\n          }\r\n        }\r\n        default:\r\n          return { ...props}\r\n      }\r\n\r\n    },\r\n    {}\r\n  );\r\n\r\n  const [, , width = 3600, height = 3600] = viewBox.split(' ');\r\n\r\n  return {\r\n    designedSize: {width, height},\r\n    ...props\r\n  }\r\n}","import _ from 'lodash'\r\nimport loadTemplate from './templating/loadTemplate'\r\nimport parseTemplate from './templating/parseTemplate'\r\nimport templates from './../assets/templates/'\r\n\r\nexport default async (initialProps) => {\r\n\r\n  const JSONTemplate = await loadTemplate('template0', templates);\r\n  const parsedTemplate = await parseTemplate(JSONTemplate);\r\n  console.log('EVENTIALLY parsedTemplate =', parsedTemplate);\r\n\r\n  return {\r\n    ...(_.defaultsDeep(parsedTemplate, initialProps))\r\n  }\r\n\r\n}","const HQSize = {\r\n  width: 3600,\r\n  height: 3600\r\n};\r\n\r\nconst LQSize = {\r\n  width: 720,\r\n  height: 720\r\n};\r\n\r\n\r\nconst initialProps = {\r\n  template: { id: 'builtin'},\r\n  outline: {\r\n    show: true,\r\n    color: '#ec2',\r\n    lineWidth: 60\r\n  },\r\n  texts: [\r\n    {\r\n      id: 'topText',\r\n      label: 'top text',\r\n      fontFamily: 'Arvo-Bold',\r\n      fontSize: 1000,\r\n      text: 'ST.JOHNS',\r\n      width: 3200,\r\n      offsetTop: 50,\r\n      lineWidth: 36,\r\n      fillStyle: '#c35',\r\n      strokeStyle : '#226',\r\n      distortion: 500,\r\n      visible: true\r\n    },\r\n    {\r\n      id: 'bottomText',\r\n      label: 'bottom text',\r\n      fontFamily: 'Arvo-Bold',\r\n      fontSize: 400,\r\n      text: 'UNIVERSITY',\r\n      width: 3200,\r\n      offsetTop: 2800,\r\n      lineWidth: 0.30,\r\n      fillStyle: '#eeaa59',\r\n      strokeStyle: '#226',\r\n      distortion: -100,\r\n      visible: true\r\n    },\r\n  ],\r\n  mascots: {\r\n    offsetTop: 650,\r\n    width: 2500,\r\n    height: 2500,\r\n    id: 'elephant'\r\n  },\r\n  saveHQ: false,\r\n  saveLQ: false,\r\n  canva: {\r\n    ...LQSize,\r\n  },\r\n  HQSize,\r\n  LQSize,\r\n  designedSize: {...HQSize},\r\n  // redrawCanvas: true\r\n};\r\n\r\nexport {HQSize, LQSize, initialProps};","  export default function(options) {\n    var fontSize = options.fontSize || getComputedStyle(options.element, 'font-size') || '100px';\n    var fontWeight = options.fontWeight || getComputedStyle(options.element, 'font-weight') || 'normal';\n    var fontFamily = options.fontFamily || getComputedStyle(options.element, 'font-family') || 'Arial';\n    var font = fontWeight + ' ' + fontSize + ' ' + fontFamily;\n    \n    var boundingRect = measureBoundingRect(options.text, font);\n    \n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.width = boundingRect.width;\n    canvas.height = boundingRect.height * 1.2; // Bounding rect height may not be enough as fillText() will render from the baseline \n    context.font = font;\n    context.fillText(options.text, 0, fontSize.replace('px', ''));\n    \n    var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    var result = measure({ width: canvas.width, height: canvas.height, imageData: imageData, options: options });\n    \n    if (!result.foundTopText) {\n      return { width: boundingRect.width, height: 0, yOffset: 0 };\n    }\n    \n    if (!result.foundBottomText) {\n      return { width: boundingRect.width, height: canvas.height - result.topTextY, yOffset: -result.topTextY };\n    }\n    \n    return { width: boundingRect.width, height: result.bottomTextY - result.topTextY, yOffset: -result.topTextY };\n  }\n  \n  const measureBoundingRect = function(text, font) {\n    var temporaryContainer = document.createElement('div');\n    temporaryContainer.style.position = 'fixed';\n    temporaryContainer.style.top = '0px';\n    temporaryContainer.style.left = '0px';\n    temporaryContainer.style.width = '0px';\n    temporaryContainer.style.height = '0px';\n    temporaryContainer.style.overflow = 'hidden';\n    \n    var temporaryElement = document.createElement('span');\n    temporaryElement.style.font = font;\n    temporaryElement.innerText = text;\n    document.body.appendChild(temporaryElement);\n    var bBox = temporaryElement.getBoundingClientRect();\n    document.body.removeChild(temporaryElement);\n    return bBox;\n  }\n  \n  function Iterator(maxWidth, maxHeight) {\n    this.x = 0;\n    this.y = 0;\n    this.index = 0;\n    \n    this.moveRight = function() {\n      if (this.arePixelsToTheRight()) {\n        this.x++;\n        this.index += 4;\n      } else {\n        this.moveDown();\n      }\n    }\n    \n    this.moveDown = function() {\n      this.x = 0;\n      this.y++;\n      this.index = this.y * maxWidth * 4;\n    }\n    \n    this.arePixelsToTheRight = function() {\n      return this.x < maxWidth - 1;\n    }\n    \n    this.noMorePixels = function() {\n      return this.index >= (maxWidth * maxHeight * 4) - 4;\n    }\n  }\n  \n  const measure = function(parameters) {\n    // Find the top and bottom of the text by finding which rows are entirely full of transparent pixels.\n    // The difference between the top-most transparent row and the bottom-most transparent row is the text height.    \n    var iterator = new Iterator(parameters.width, parameters.height);\n    var foundTopText = false;\n    var foundBottomText = false;\n    var topTextY = null;\n    var bottomTextY = null;\n    var allPixelsInThisRowAreWhite;\n    while (!iterator.noMorePixels()) {\n      if (!foundTopText) {\n        // We have only encounted rows that are totally white so far, as soon as we \n        // find a pixel that is not white we will count that as the top of the text\n        if (isTransparent(parameters.imageData, iterator.index)) {\n          iterator.moveRight();\n        } else {\n          topTextY = iterator.y;\n          foundTopText = true;\n          iterator.moveDown();\n        }\n      } else {\n        // We are looping through the rows until we find a row which is all white, \n        // in which case we have reached the bottom of the text\n        if (!iterator.arePixelsToTheRight()) {\n          if (allPixelsInThisRowAreWhite) {\n            bottomTextY = iterator.y;\n            foundBottomText = true;\n            break;\n          }  \n          allPixelsInThisRowAreWhite = true;\n          iterator.moveDown();\n        }\n        if (!isTransparent(parameters.imageData, iterator.index)) {\n          allPixelsInThisRowAreWhite = false;\n          iterator.moveDown();\n        } else {\n          iterator.moveRight();\n        }\n      }\n    }\n    \n    return { foundTopText: foundTopText, foundBottomText: foundBottomText, topTextY: topTextY, bottomTextY: bottomTextY };\n  }\n  \n  function isTransparent(imageData, index) {\n    return imageData.data[index + 3] === 0; // If there is zero alpha then it is transparent\n  }\n  \n  function getComputedStyle(element, property) {\n    return element ? window.getComputedStyle(element)[property] : null ;\n  }\n","function scaleImageData({ctx, imageData,  amplitude, curve}) {\r\n  const halfWidth = imageData.width / 2 || ctx.width / 2;\r\n  const orientation = amplitude < 0 ? -1 : 0;\r\n  var scaled = ctx.createImageData(imageData.width, imageData.height + Math.abs(amplitude));\r\n  for(var row = 0; row < imageData.height; row++) {\r\n    for(var col = 0; col < imageData.width; col++) {\r\n      var sourcePixel = [\r\n        imageData.data[(row * imageData.width + col) * 4 + 0],\r\n        imageData.data[(row * imageData.width + col) * 4 + 1],\r\n        imageData.data[(row * imageData.width + col) * 4 + 2],\r\n        imageData.data[(row * imageData.width + col) * 4 + 3]\r\n      ];\r\n      var delta = (col - halfWidth) / halfWidth;\r\n      const dy = Math.round(amplitude * curve(delta) ) + orientation * amplitude;\r\n      var destRow = row + dy;\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 0] = sourcePixel[0];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 1] = sourcePixel[1];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 2] = sourcePixel[2];\r\n      scaled.data[(destRow * scaled.width + col) * 4 + 3] = sourcePixel[3];\r\n    }\r\n  }\r\n\r\n  return scaled;\r\n}\r\n\r\nexport default scaleImageData","import textMeasurer from '../utils/textmeasurer'\r\nimport scaleImageData from '../utils/scaleImageData'\r\n\r\nexport default function(\r\n  {\r\n    ctx,\r\n    tCtx,\r\n    text = '1234567890abcdefghihklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n    fontSize = 80,\r\n    fontFamily = 'AtomicAge',\r\n    width = 3400,\r\n    offsetTop = 50,\r\n    distortion = 0,\r\n    lineWidth = 3,\r\n    fillStyle = '#4444f1',\r\n    strokeStyle = '#4444f1',\r\n\r\n    designedSize = {\r\n      width: 3600,\r\n      height: 3600\r\n    }\r\n  }\r\n) {\r\n\r\n  const {\r\n    width: designedWidth,\r\n    height: designedHeight } = designedSize;\r\n  const { width: ctxWidth, height: ctxHeight } = ctx.canvas;\r\n  // const { width: tCtxWidth, height: tCtxHeight } = tCtx.canvas;\r\n  const XFactor = ctxWidth / designedWidth;\r\n  const YFactor = ctxHeight / designedHeight;\r\n  const OFactor = Math.sqrt(XFactor * XFactor + YFactor * YFactor);\r\n\r\n  // ctx.fillStyle = 'rgba(10,0,0, 0.05)';\r\n  // ctx.fillRect(0,0, ctxWidth, ctxHeight);\r\n\r\n  /* detect scale factor to fit short text into box width */\r\n  const {\r\n    width: textWidth, height: textHeight,\r\n    // yOffset\r\n  } = textMeasurer({\r\n    text,\r\n    fontSize: `${YFactor * fontSize}px`,\r\n    fontFamily\r\n  });\r\n  const scaleFActor = ( XFactor * width / textWidth > 1 ) ? XFactor * width / textWidth : 1;\r\n  const leftPadding = (designedWidth - width) * XFactor / 2 - XFactor * lineWidth / 2;\r\n\r\n  const relativeSize = {\r\n    w: XFactor / scaleFActor * width + XFactor / scaleFActor * lineWidth,\r\n    h: textHeight + YFactor * lineWidth\r\n  };\r\n\r\n  const coord = {\r\n    x0: XFactor / scaleFActor * lineWidth / 2,\r\n    y0: YFactor / scaleFActor * lineWidth / 2,\r\n    x: relativeSize.w,\r\n    y: relativeSize.h,\r\n  };\r\n  // console.log( 'coord.x0=', coord.x0, ' relativeSize.w=', relativeSize.w, ' relativeSize.h=', relativeSize.h, );\r\n\r\n  // tCtx.textBaseline = 'bottom';\r\n  tCtx.strokeStyle = strokeStyle;\r\n  tCtx.fillStyle = fillStyle;\r\n\r\n  /****** DRAW BOUNDARY OF THE TEXT ******/\r\n  // tCtx.lineWidth = 1;\r\n  // tCtx.strokeRect(coord.x0, coord.y0 + 1, coord.x-1, textHeight + scaledLineW);\r\n\r\n  tCtx.lineWidth = OFactor / scaleFActor * lineWidth;\r\n  tCtx.textAlign = 'left';\r\n  tCtx.font=`${ YFactor * fontSize }px ${fontFamily}`;\r\n\r\n  tCtx.fillText(text, coord.x0, relativeSize.h, XFactor * width);\r\n  tCtx.strokeText(text, coord.x0, relativeSize.h, XFactor * width);\r\n\r\n  console.log(text, 'lineWidth=', lineWidth, 'strokeStyle=', strokeStyle, 'scaleFActor=', scaleFActor, tCtx);\r\n\r\n  const amplitude = distortion * YFactor;\r\n  if (distortion !== 0 ) {\r\n    const imageData = tCtx.getImageData(\r\n      0, 0,\r\n      relativeSize.w, relativeSize.h + Math.abs(amplitude)\r\n    );\r\n    const scaledImageData = scaleImageData({ctx: tCtx, imageData, amplitude, curve: x => x * x});\r\n    tCtx.putImageData(scaledImageData, 0, 0);\r\n  }\r\n\r\n  const img = new Image();\r\n  img.src = tCtx.canvas.toDataURL();\r\n  tCtx.clearRect(0, 0, tCtx.canvas.width, tCtx.canvas.height);\r\n\r\n  return new Promise(resolve => {\r\n    img.onload = function (){\r\n      ctx.drawImage(img,\r\n        0, 0,\r\n        relativeSize.w, 1.2 * (relativeSize.h + 0 * YFactor * lineWidth  / scaleFActor) + 2 * Math.abs(amplitude),\r\n        // relativeSize.w, 1.2 * relativeSize.h + 2 * Math.abs(amplitude),\r\n        leftPadding, offsetTop * YFactor - 0.5*1.2 * YFactor * lineWidth,\r\n        width * XFactor + XFactor * lineWidth, 1.2*(textHeight + 1 * YFactor * lineWidth) + 2 * Math.abs(amplitude)\r\n      );\r\n      resolve('drown')\r\n    };\r\n  });\r\n}\r\n\r\n","import mascots from './../assets/logos'\r\n\r\nexport default function (\r\n  {\r\n    ctx,\r\n    mascots: {\r\n      offsetTop,\r\n      width,\r\n      height,\r\n      id,\r\n    },\r\n    designedSize: {\r\n      width: designedWidth,\r\n      height: designedHeight\r\n    }\r\n  }\r\n) {\r\n\r\n  const { width: ctxWidth, height: ctxHeight } = ctx.canvas;\r\n  const XFactor = ctxWidth / designedWidth;\r\n  const YFactor = ctxHeight / designedHeight;\r\n  const leftPadding = (designedWidth - width) * XFactor / 2;\r\n\r\n  // console.log(ctxHeight , designedHeight, YFactor);\r\n  // console.log('offsetTop =', offsetTop, ' width =', width, ' height=', height);\r\n\r\n  const img = new Image(ctx.canvas.width, ctx.canvas.height);\r\n  img.src = mascots[id];\r\n\r\n  return new Promise(resolve => {\r\n    img.onload = function (){\r\n      ctx.drawImage(img, leftPadding, offsetTop*YFactor, width*XFactor, height*YFactor);\r\n      resolve('drown')\r\n    };\r\n  });\r\n}","export default function (wrappedComp, props) {\r\n  const {\r\n    outline: {\r\n      color = '#f00',\r\n      lineWidth = 0\r\n    } ,\r\n    offsetTop,\r\n    lineWidth: textLineWidth\r\n  } = props;\r\n  const newLineWidth = textLineWidth + lineWidth;\r\n  const newOffsetTop = offsetTop - (lineWidth + 0*textLineWidth) / 2;\r\n  const newProps = {\r\n    ...props,\r\n    fillStyle: color,\r\n    strokeStyle: color,\r\n    lineWidth: newLineWidth,\r\n    offsetTop: newOffsetTop,\r\n  };\r\n\r\n  return wrappedComp(newProps)\r\n}","import {getJSONfile, deepFind} from './../utils'\r\nimport JSONS from './../assets/logos/'\r\n\r\n const drawImageOutline = async function (\r\n  {\r\n    ctx,\r\n    outline: {\r\n      color = '#ff0',\r\n      lineWidth = 40\r\n    },\r\n    mascots: {\r\n      offsetTop,\r\n      width,\r\n      height,\r\n      id = 'elephant',\r\n    },\r\n    designedSize: {\r\n      width: designedWidth,\r\n      height: designedHeight\r\n    }\r\n  }\r\n) {\r\n   const { width: ctxWidth, height: ctxHeight } = ctx.canvas;\r\n   const XFactor = ctxWidth / designedWidth;\r\n   const YFactor = ctxHeight / designedHeight;\r\n   const leftPadding = (designedWidth - width) * XFactor / 2;\r\n\r\n  const img = new Image(ctx.canvas.width, ctx.canvas.height);\r\n\r\n  const JSONSVGImage = await getJSONfile(id, JSONS);\r\n  const outLineViewBox = JSONSVGImage['attributes']['viewBox'];\r\n  const outlineTag = deepFind(JSONSVGImage.children, ['attributes','id'], \"OUTLINE\");\r\n  const outLineD = outlineTag.attributes.d;\r\n  const outLineStrokeWidth = outlineTag.attributes['stroke-width'];\r\n  const strokeWidth = ( outLineStrokeWidth > 0 ) ? outLineStrokeWidth : lineWidth;\r\n\r\n  const outlineXML = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"${outLineViewBox}\">\r\n    <path id=\"OUTLINE\" \r\n    fill=\"${color}\" \r\n    stroke=\"${color}\" \r\n    stroke-width=\"${strokeWidth}\"\r\n    d=\"${outLineD}\"/>\r\n    </svg>`;\r\n\r\n  const svg64 = btoa(outlineXML);\r\n  img.src = 'data:image/svg+xml;base64,'+svg64;\r\n  return new Promise(resolve => {\r\n    img.onload = function (){\r\n      ctx.drawImage(img, leftPadding, offsetTop*YFactor, width*XFactor, height*YFactor);\r\n      resolve('drown')\r\n    };\r\n  });\r\n}\r\n\r\n// import _ from 'lodash';\r\n// import {getSVGImage} from './../utils/loadFile'\r\n// export default async function (\r\n//   {\r\n//     ctx,\r\n//     id = 'elephant'\r\n//   }\r\n// ) {\r\n//   const img = new Image(ctx.canvas.width, ctx.canvas.height);\r\n//\r\n//   // console.log('mascots[id] =', mascots[id]);\r\n//   // const SVGImage = await getSVGImage(mascots[id]);\r\n//   const JSONSVGImage = await getJSONSVGImage(`/JSONS/${id}.json`);\r\n//   console.log('JSONSVGImage =', JSONSVGImage);\r\n//   const outlineTag = _.findKey(\r\n//     JSONSVGImage.svg,\r\n//     {'-id': 'OUTLINE'}\r\n//     // o => { console.log(o); return o['-id'] === 'OUTLINE' }\r\n//   );\r\n//   const outLineD = JSONSVGImage.svg[outlineTag]['-d']\r\n//   console.log('outlineTag =', outlineTag, outLineD);\r\n//\r\n//\r\n//   // var svgURL = 'data:image/svg+xml; charset=utf8, ' + encodeURIComponent(svgData);\r\n//\r\n//   // img.src = mascots[id];\r\n//   // img.src = 'data:image/svg+xml; charset=utf8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\"><g fill=\"#61DAFB\"><path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/><circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/><path d=\"M520.5 78.1z\"/></g></svg>';\r\n//   //\r\n//   // return new Promise(resolve => {\r\n//   //   img.onload = function (){\r\n//   //     // console.log(mascots[id], img)\r\n//   //     ctx.drawImage(img, 0, 0, ctx.canvas.width, ctx.canvas.height);\r\n//   //     resolve('drown')\r\n//   //   };\r\n//   // });\r\n//\r\n//\r\n//   // let p = new Path2D('M10 10 h 80 v 80 h -80 Z');\r\n//   let p = new Path2D(outLineD);\r\n//   ctx.fill(p);\r\n// }\r\n\r\nexport default drawImageOutline;","import DrawText from './drawTextV2'\r\nimport DrawImage from './drawImage'\r\nimport Outlined from './outlined'\r\nimport DrawImageOutline from './drawImageOutline'\r\n\r\nexport default async function (ctx, tCtx, props) {\r\n  // console.log('MainLayout props =', props);\r\n\r\n  const { outline: {show: outlineShow}, } = props;\r\n  // ctx.fillStyle = '#fff';\r\n  // ctx.save();\r\n  /* draw outlined TOP text*/\r\n  (outlineShow && await Outlined(DrawText,\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      ...props.texts[0],\r\n      outline: props.outline,\r\n    }\r\n  ));\r\n\r\n  /* draw outlined BOTTOM text*/\r\n  (outlineShow && await Outlined(DrawText,\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      ...props.texts[1],\r\n      outline: props.outline,\r\n    }\r\n  ));\r\n\r\n  (outlineShow && await DrawImageOutline({\r\n    ctx,\r\n      ...props,\r\n    outline: props.outline,\r\n  }));\r\n\r\n  await DrawImage({\r\n    ctx,\r\n    ...props,\r\n  });\r\n\r\n  await DrawText(\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      ...props.texts[0],\r\n    }\r\n  );\r\n  /* draw BOTTOM text*/\r\n  await DrawText(\r\n    {\r\n      ctx,\r\n      tCtx,\r\n      ...props.texts[1],\r\n    }\r\n  );\r\n\r\n  return new Promise(resolve => {\r\n    // ctx.restore();\r\n    resolve('all are drown')\r\n  });\r\n}\r\n\r\n","import { useEffect, useRef } from 'react'\r\nimport { saveAs } from 'file-saver';\r\nimport { HQSize } from './../constants/initSettings';\r\nimport draw from './drawingSequence'\r\n\r\nexport function usePersistentCanvas({setProps, ...props}) {\r\n  const canvasRef = useRef(null);\r\n  const textCanvasREf = useRef(null);\r\n\r\n  const saveCanvasToFile = (fileName) => {\r\n    const canvas = canvasRef.current;\r\n    canvas.toBlob(function(blob) {\r\n      saveAs(blob, fileName);\r\n    });\r\n  };\r\n\r\n  async function drawing (ctx, tCtx, props) {\r\n\r\n    await draw(ctx, tCtx, props);\r\n    if (props.saveLQ || props.saveHQ) {\r\n      saveCanvasToFile(`export_LQ_${Date.now()}.png`);\r\n      setProps({\r\n        ...props,\r\n        saveLQ: false,\r\n        saveHQ: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect( () => {\r\n    const canvas = canvasRef.current;\r\n    const textCanvas = textCanvasREf.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const tCtx = textCanvas.getContext('2d');\r\n\r\n    const canvasResolution = props.saveHQ\r\n       ? { ...HQSize } // set HQ resolution for render for capture the image\r\n       : props.canva;\r\n\r\n    canvas.setAttribute('width', canvasResolution.width);\r\n    canvas.setAttribute('height', canvasResolution.height);\r\n    textCanvas.setAttribute('width', canvasResolution.width);\r\n    textCanvas.setAttribute('height', canvasResolution.height);\r\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n    if (props.redrawCanvas) {\r\n      // console.info('DRAWING props =', props.redrawCanvas, props);\r\n      drawing(ctx, tCtx, props)\r\n    }\r\n  });\r\n\r\n  return [canvasRef, textCanvasREf]\r\n}\r\n","import {useEffect} from 'react';\r\nimport _ from 'lodash'\r\nimport { applayTemplate } from './../functionality'\r\nimport { usePersistentCanvas } from './../canvas'\r\n\r\nexport default function (component) {\r\n  let redrawCanvas = true;\r\n  return function({setProps, ...props}) {\r\n\r\n    // console.log(' appLauncher initialProps=', props)\r\n    const [canvasRef, textCanvasREf] = usePersistentCanvas({...props, setProps, redrawCanvas});\r\n\r\n    function eventHandler(e) {\r\n      // console.log('eventHandler', e);\r\n      setProps(_.defaultsDeep(e, props))\r\n      if (props.template.id !== e.template.id) { redrawCanvas = false }\r\n    }\r\n\r\n    useEffect(() => {\r\n      if (props.template.id !== 'builtin') {\r\n        applayTemplate(props).then( p => {\r\n            redrawCanvas = true;\r\n            setProps(p)\r\n          }\r\n        );\r\n      }\r\n    } , [props.template.id]);\r\n\r\n    return component({...props, setProps, canvasRef, textCanvasREf, eventHandler})\r\n  }\r\n}\r\n\r\n","import React, {Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { appLauncher } from './../../functionality'\r\nimport { SidePanel, MascotsPanel, TemplatesPanel, Header } from './../'\r\nimport styles from './Index.module.scss'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction MainLayout({setProps, ...props}) {\r\n  // console.log('mainLayout props.template.id=', props.template.id, '  props.redrawCanvas =', props.redrawCanvas);\r\n  const {HQSize, canvasRef, textCanvasREf, eventHandler} = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <Grid container spacing={3} className={classes.root}>\r\n\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>\r\n            <SidePanel eventHandler={eventHandler} props={props}/>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={5}>\r\n          <div className={styles.canvaContainer}>\r\n            <canvas key={props.template.id}\r\n              id='THEMAINCANVAS'\r\n              className={styles.canvases}\r\n              ref={canvasRef}\r\n            />\r\n          </div>\r\n          <Grid container justify = \"center\">\r\n            <ButtonGroup variant=\"contained\" aria-label=\"small contained button group\">\r\n              <Button\r\n                onClick = { () => { setProps({...props, saveLQ: true }) }}\r\n              >Save as low-quality PNG (72 DPI)</Button>\r\n              <Button\r\n                onClick = { () => {setProps({...props, saveHQ: true, ...HQSize }) }}\r\n              >Save as high-quality PNG (300 DPI)</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={4}>\r\n          <TemplatesPanel eventHandler={eventHandler}/>\r\n          <MascotsPanel eventHandler={eventHandler}/>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <canvas\r\n        className={classNames(styles.serviceCanvas, styles.canvases)}\r\n        ref={textCanvasREf}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default appLauncher( MainLayout )\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nconst MenuIcon  = (props) => (\r\n  <SvgIcon {...props}>\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\r\n  </SvgIcon>\r\n);\r\n\r\nconst AccountCircle = (props) => (\r\n  <SvgIcon {...props}>\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"/>\r\n  </SvgIcon>\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\"  style={{ background: 'transparent', boxShadow: 'none'}}>\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon color=\"primary\"/>\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title} color=\"primary\">\r\n          Create your style\r\n        </Typography>\r\n        <div>\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle color=\"primary\"/>\r\n          </IconButton>\r\n\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}","import React, {Fragment, useEffect, useState} from 'react';\r\nimport {MainLayout} from './UI/'\r\nimport {initialProps} from './constants/initSettings';\r\nimport './Index.module.scss'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [props, setProps] = useState(initialProps);\r\n\r\n  const content = (isMounted )\r\n    ? <MainLayout {...props} setProps={setProps}/>\r\n    : <span style={{fontFamily: 'Arvo-Bold'}}>Loading...</span>;\r\n\r\n  useEffect(() => {\r\n        setIsMounted(true)\r\n  } , []);\r\n\r\n  return (<Fragment>\r\n      {content}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/master.584af3e3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvases\":\"Index_canvases__3cujD\",\"canvaContainer\":\"Index_canvaContainer__xHRDS\",\"serviceCanvas\":\"Index_serviceCanvas__B4yWI\"};"],"sourceRoot":""}